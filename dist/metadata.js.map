{"version":3,"sources":["../src/metadata.js"],"names":[],"mappings":"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","file":"metadata.js","sourcesContent":["// import pgformat from 'pg-format';\nimport {format} from 'util';\nimport Utils from './utils';\nimport sqldiff from 'sqldiff';\n\nfunction pgvalue(value) {\n  if (value == null) {\n    return 'NULL';\n  }\n  return \"'\" + value.toString().replace(/'/g, \"''\") + \"'\";\n}\n\nexport default class Metadata {\n  constructor(diff, options) {\n    this.options = options || {};\n  }\n\n  build(generator, changes) {\n    this.diff = generator.differ;\n    this.changes = changes;\n    this.oldViews = this.diff.oldSchema ? this.diff.oldSchema.views : [];\n    this.oldViews = this.oldViews || [];\n\n    this.newViews = this.diff.newSchema ? this.diff.newSchema.views : [];\n    this.newViews = this.newViews || [];\n\n    if (this.shouldEmitMetadata()) {\n      Array.prototype.push.apply(changes, this.buildStatements());\n    }\n  }\n\n  shouldEmitMetadata() {\n    const oldName = this.diff.oldSchema && this.diff.oldSchema.form ? this.diff.oldSchema.form.name : null;\n    const newName = this.diff.newSchema && this.diff.newSchema.form ? this.diff.newSchema.form.name : null;\n\n    // emit the metadata statements if there are already some changes being emitted or\n    // the form name changed.\n    return (this.changes.length > 0 || oldName !== newName);\n  }\n\n  buildStatements() {\n    const statements = [];\n\n    const systemTablesName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'tables');\n    const systemColumnsName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'columns');\n\n    statements.push(format('CREATE TABLE IF NOT EXISTS %s (name text, type text, parent text, form_id text);',\n                           systemTablesName));\n\n    statements.push(format('CREATE TABLE IF NOT EXISTS %s (table_name text, name text, ordinal bigint, type text, nullable boolean, form_id text);',\n                           systemColumnsName));\n\n    // drop old metadata\n    for (const view of this.oldViews) {\n      statements.push(format('DELETE FROM %s WHERE name = %s;',\n                             systemTablesName,\n                             pgvalue(view.table.alias)));\n\n      statements.push(format('DELETE FROM %s WHERE table_name = %s;',\n                             systemColumnsName,\n                             pgvalue(view.table.alias)));\n    }\n\n    // create new metadata\n    for (const view of this.newViews) {\n      if (view.type === 'values' || view.variant != null) {\n        continue;\n      }\n\n      const viewAlias = view.alias || view.table.alias;\n      const viewType = view.type || view.table.type;\n\n      statements.push(format('DELETE FROM %s WHERE name = %s;',\n                             systemTablesName,\n                             pgvalue(viewAlias)));\n\n      statements.push(format('DELETE FROM %s WHERE table_name = %s;',\n                             systemColumnsName,\n                             pgvalue(viewAlias)));\n\n      statements.push(format('INSERT INTO %s (name, type, parent, form_id) SELECT %s, %s, %s, %s;',\n                             systemTablesName,\n                             pgvalue(viewAlias),\n                             pgvalue(viewType),\n                             pgvalue(view.table.parent ? view.table.parent.alias : null),\n                             pgvalue(view.table.form_id)));\n\n      for (let i = 0; i < view.columns.length; ++i) {\n        const column = view.columns[i];\n\n        statements.push(format('DELETE FROM %s WHERE table_name = %s AND name = %s;',\n                               systemColumnsName,\n                               pgvalue(viewAlias),\n                               pgvalue(column.alias)));\n\n        statements.push(format('INSERT INTO %s (table_name, name, ordinal, type, nullable, form_id) SELECT %s, %s, %s, %s, %s, %s;',\n                               systemColumnsName,\n                               pgvalue(viewAlias),\n                               pgvalue(column.alias),\n                               pgvalue(i + 1),\n                               pgvalue(column.column.type),\n                               pgvalue(column.column.allowNull ? 1 : 0),\n                               pgvalue(view.table.form_id)));\n      }\n    }\n\n    return statements.map(s => {\n      return new sqldiff.SchemaChange('raw', {sql: s});\n    });\n  }\n}\n"]}