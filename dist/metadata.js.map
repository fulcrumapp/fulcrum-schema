{"version":3,"file":"metadata.js","names":["pgvalue","value","toString","replace","Metadata","diff","options","includeColumns","useAliases","build","generator","changes","differ","oldViews","oldSchema","views","newViews","newSchema","shouldEmitMetadata","Array","prototype","push","apply","buildStatements","oldName","form","name","newName","length","viewName","tablePrefix","statements","METADATA","schemaChangesTableName","Utils","tableName","schema","prefix","quote","systemTablesName","systemTablesViewName","systemColumnsName","systemColumnsViewName","format","view","viewAlias","alias","table","viewType","type","variant","element","parentViewName","parent","find","v","form_id","key","data_name","i","columns","column","field","fieldType","dataName","part","data","suffix","allowNull","map","s","sqldiff","SchemaChange","sql"],"sources":["../src/metadata.js"],"sourcesContent":["// import pgformat from 'pg-format';\nimport {format} from 'util';\nimport Utils from './utils';\nimport sqldiff from 'sqldiff';\n\nfunction pgvalue(value) {\n  if (value == null) {\n    return 'NULL';\n  }\n  return \"'\" + value.toString().replace(/'/g, \"''\") + \"'\";\n}\n\nexport default class Metadata {\n  constructor(diff, options) {\n    this.options = options || {};\n    this.includeColumns = this.options.includeColumns == null ? true : this.options.includeColumns;\n    this.useAliases = this.options.useAliases == null ? true : this.options.useAliases;\n  }\n\n  build(generator, changes) {\n    this.diff = generator.differ;\n    this.changes = changes;\n    this.oldViews = this.diff.oldSchema ? this.diff.oldSchema.views : [];\n    this.oldViews = this.oldViews || [];\n\n    this.newViews = this.diff.newSchema ? this.diff.newSchema.views : [];\n    this.newViews = this.newViews || [];\n\n    if (this.shouldEmitMetadata()) {\n      Array.prototype.push.apply(changes, this.buildStatements());\n    }\n  }\n\n  shouldEmitMetadata() {\n    const oldName = this.diff.oldSchema && this.diff.oldSchema.form ? this.diff.oldSchema.form.name : null;\n    const newName = this.diff.newSchema && this.diff.newSchema.form ? this.diff.newSchema.form.name : null;\n\n    // emit the metadata statements if there are already some changes being emitted or\n    // the form name changed.\n    return (this.changes.length > 0 || oldName !== newName);\n  }\n\n  viewName(name) {\n    return (this.options.tablePrefix || '') + name;\n  }\n\n  buildStatements() {\n    const statements = [];\n\n    const METADATA = false;\n\n    const schemaChangesTableName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'schema_changes');\n    const systemTablesName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'tables');\n    const systemTablesViewName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'tables_view');\n    const systemColumnsName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'columns');\n    const systemColumnsViewName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'columns_view');\n\n    if (METADATA) {\n      statements.push(format('CREATE TABLE IF NOT EXISTS %s (name text NOT NULL, created_at timestamp with time zone NOT NULL, sql TEXT NOT NULL);',\n                             schemaChangesTableName));\n\n      statements.push(format('CREATE UNIQUE INDEX ON %s (name);',\n                             schemaChangesTableName));\n\n      statements.push(format('CREATE TABLE IF NOT EXISTS %s (name text, alias text, type text, parent text, form_id text, field text, field_type text, data_name text);',\n                             systemTablesName));\n\n      statements.push(format('CREATE OR REPLACE VIEW %s AS SELECT alias AS name, type, parent, form_id, field, field_type, data_name FROM %s;',\n                             systemTablesViewName, systemTablesName));\n\n      statements.push(format('CREATE INDEX idx_tables_name ON %s (name);',\n                             systemTablesName));\n\n      statements.push(format('CREATE INDEX idx_tables_alias ON %s (alias);',\n                             systemTablesName));\n\n      if (this.includeColumns) {\n        // field type\n        statements.push(format('CREATE TABLE IF NOT EXISTS %s (table_name text, table_alias text, name text, ordinal bigint, type text, nullable boolean, form_id text, field text, field_type text, data_name text, part text, data text);',\n                               systemColumnsName));\n\n        statements.push(format('CREATE OR REPLACE VIEW %s AS SELECT table_alias AS table_name, name, ordinal, type, nullable, form_id, field, field_type, data_name, part FROM %s;',\n                               systemColumnsViewName, systemColumnsName));\n\n        statements.push(format('CREATE INDEX idx_columns_table_name ON %s (table_name);',\n                               systemColumnsName));\n\n        statements.push(format('CREATE INDEX idx_columns_table_alias ON %s (table_alias);',\n                               systemColumnsName));\n      }\n    }\n\n    // drop old metadata\n    for (const view of this.oldViews) {\n      statements.push(format('DELETE FROM %s WHERE name = %s;',\n                             systemTablesName,\n                             pgvalue(view.name)));\n\n      if (this.includeColumns) {\n        statements.push(format('DELETE FROM %s WHERE table_name = %s;',\n                               systemColumnsName,\n                               pgvalue(view.name)));\n      }\n    }\n\n    // create new metadata\n    for (const view of this.newViews) {\n      const viewName = this.viewName(view.name);\n      const viewAlias = view.alias || view.table.alias;\n      const viewType = view.type || view.table.type;\n\n      // skip the _full and 'values' tables\n      if (viewType === 'values' || view.variant != null) {\n        continue;\n      }\n\n      statements.push(format('DELETE FROM %s WHERE name = %s;',\n                             systemTablesName,\n                             pgvalue(viewName)));\n\n      if (this.includeColumns) {\n        statements.push(format('DELETE FROM %s WHERE table_name = %s;',\n                               systemColumnsName,\n                               pgvalue(viewName)));\n      }\n\n      let element = view.element || view.table.element;\n\n      let parentViewName = null;\n\n      const {parent} = view.table;\n\n      if (parent) {\n        if (this.useAliases) {\n          parentViewName = parent.alias;\n        } else {\n          parentViewName = this.newViews.find(v => v.table === parent && v.variant == null).name;\n        }\n      }\n\n      statements.push(format('INSERT INTO %s (name, alias, type, parent, form_id, field, field_type, data_name) SELECT %s, %s, %s, %s, %s, %s, %s, %s;',\n                             systemTablesName,\n                             pgvalue(viewName),\n                             pgvalue(viewAlias),\n                             pgvalue(viewType),\n                             pgvalue(parentViewName),\n                             pgvalue(view.table.form_id),\n                             pgvalue(element ? element.key : null),\n                             pgvalue(element ? element.type : null),\n                             pgvalue(element ? element.data_name : null)));\n\n      if (this.includeColumns) {\n        for (let i = 0; i < view.columns.length; ++i) {\n          const column = view.columns[i];\n\n          // statements.push(format('DELETE FROM %s WHERE table_name = %s AND name = %s;',\n          //                        systemColumnsName,\n          //                        pgvalue(viewName),\n          //                        pgvalue(column.alias)));\n\n          let field = null;\n          let fieldType = null;\n          let dataName = null;\n          let part = null;\n          const data = null;\n\n          element = column.column.element;\n\n          if (element) {\n            field = element.key;\n            fieldType = element.type;\n            dataName = element.data_name;\n            part = column.column.suffix ? column.column.suffix.replace(/^_/, '') : null;\n            // data = JSON.stringify(element);\n          }\n\n          statements.push(format('INSERT INTO %s (table_name, table_alias, name, ordinal, type, nullable, form_id, field, field_type, data_name, part, data)\\n' +\n                                 'SELECT %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s;',\n                                 systemColumnsName,\n                                 pgvalue(viewName),\n                                 pgvalue(viewAlias),\n                                 pgvalue(column.alias),\n                                 pgvalue(i + 1),\n                                 pgvalue(column.column.type),\n                                 pgvalue(column.column.allowNull ? 1 : 0),\n                                 pgvalue(view.table.form_id),\n                                 pgvalue(field),\n                                 pgvalue(fieldType),\n                                 pgvalue(dataName),\n                                 pgvalue(part),\n                                 pgvalue(data)));\n        }\n      }\n    }\n\n    return statements.map(s => {\n      return new sqldiff.SchemaChange('raw', {sql: s});\n    });\n  }\n}\n"],"mappings":"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"}