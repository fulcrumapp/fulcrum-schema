{"version":3,"sources":["../src/metadata.js"],"names":[],"mappings":"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","file":"metadata.js","sourcesContent":["import pgformat from 'pg-format';\nimport Utils from './utils';\nimport sqldiff from 'sqldiff';\n\nexport default class Metadata {\n  constructor(diff, options) {\n    this.options = options || {};\n  }\n\n  build(generator, changes) {\n    this.diff = generator.differ;\n    this.changes = changes;\n    this.oldViews = this.diff.oldSchema ? this.diff.oldSchema.views : [];\n    this.oldViews = this.oldViews || [];\n\n    this.newViews = this.diff.newSchema ? this.diff.newSchema.views : [];\n    this.newViews = this.newViews || [];\n\n    if (this.shouldEmitMetadata()) {\n      Array.prototype.push.apply(changes, this.buildStatements());\n    }\n  }\n\n  shouldEmitMetadata() {\n    const oldName = this.diff.oldSchema && this.diff.oldSchema.form ? this.diff.oldSchema.form.name : null;\n    const newName = this.diff.newSchema && this.diff.newSchema.form ? this.diff.newSchema.form.name : null;\n\n    // emit the metadata statements if there are already some changes being emitted or\n    // the form name changed.\n    return (this.changes.length > 0 || oldName !== newName);\n  }\n\n  buildStatements() {\n    const statements = [];\n\n    const systemTablesName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'tables');\n    const systemColumnsName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'columns');\n\n    statements.push(pgformat('CREATE TABLE IF NOT EXISTS %s (name text, type text, parent text, form_id text);',\n                             systemTablesName));\n\n    statements.push(pgformat('CREATE TABLE IF NOT EXISTS %s (table_name text, name text, ordinal bigint, type text, nullable boolean, form_id text);',\n                             systemColumnsName));\n\n    // drop old metadata\n    for (const view of this.oldViews) {\n      statements.push(pgformat('DELETE FROM %s WHERE name = %L;',\n                               systemTablesName,\n                               view.table.alias));\n\n      statements.push(pgformat('DELETE FROM %s WHERE table_name = %L;',\n                               systemColumnsName,\n                               view.table.alias));\n    }\n\n    // create new metadata\n    for (const view of this.newViews) {\n      statements.push(pgformat('DELETE FROM %s WHERE name = %L;',\n                               systemTablesName,\n                               view.table.alias));\n\n      statements.push(pgformat('DELETE FROM %s WHERE table_name = %L;',\n                               systemColumnsName,\n                               view.table.alias));\n\n      statements.push(pgformat('INSERT INTO %s (name, type, parent, form_id) SELECT %L, %L, %L, %L;',\n                               systemTablesName,\n                               view.table.alias,\n                               view.table.type,\n                               view.table.parent ? view.table.parent.alias : null,\n                               view.table.form_id));\n\n      for (let i = 0; i < view.columns.length; ++i) {\n        const column = view.columns[i];\n\n        statements.push(pgformat('DELETE FROM %s WHERE table_name = %L AND name = %L;',\n                                 systemColumnsName,\n                                 view.table.alias,\n                                 column.alias));\n\n        statements.push(pgformat('INSERT INTO %s (table_name, name, ordinal, type, nullable, form_id) SELECT %L, %L, %L, %L, %L, %L;',\n                                 systemColumnsName,\n                                 view.table.alias,\n                                 column.alias,\n                                 i + 1,\n                                 column.column.type,\n                                 column.column.allowNull ? 1 : 0,\n                                 view.table.form_id));\n      }\n    }\n\n    return statements.map(s => {\n      return new sqldiff.SchemaChange('raw', {sql: s});\n    });\n  }\n}\n"]}