{"version":3,"file":"metadata.js","names":["pgvalue","value","toString","replace","Metadata","diff","options","includeColumns","useAliases","build","generator","changes","differ","oldViews","oldSchema","views","newViews","newSchema","shouldEmitMetadata","Array","prototype","push","apply","buildStatements","oldName","form","name","newName","length","viewName","tablePrefix","statements","METADATA","schemaChangesTableName","Utils","tableName","schema","prefix","quote","systemTablesName","systemTablesViewName","systemColumnsName","systemColumnsViewName","format","view","viewAlias","alias","table","viewType","type","variant","element","parentViewName","parent","find","v","form_id","key","data_name","i","columns","column","field","fieldType","dataName","part","data","suffix","allowNull","map","s","sqldiff","SchemaChange","sql"],"sources":["../src/metadata.js"],"sourcesContent":["// import pgformat from 'pg-format';\nimport {format} from 'util';\nimport Utils from './utils';\nimport sqldiff from 'sqldiff';\n\nfunction pgvalue(value) {\n  if (value == null) {\n    return 'NULL';\n  }\n  return \"'\" + value.toString().replace(/'/g, \"''\") + \"'\";\n}\n\nexport default class Metadata {\n  constructor(diff, options) {\n    this.options = options || {};\n    this.includeColumns = this.options.includeColumns == null ? true : this.options.includeColumns;\n    this.useAliases = this.options.useAliases == null ? true : this.options.useAliases;\n  }\n\n  build(generator, changes) {\n    this.diff = generator.differ;\n    this.changes = changes;\n    this.oldViews = this.diff.oldSchema ? this.diff.oldSchema.views : [];\n    this.oldViews = this.oldViews || [];\n\n    this.newViews = this.diff.newSchema ? this.diff.newSchema.views : [];\n    this.newViews = this.newViews || [];\n\n    if (this.shouldEmitMetadata()) {\n      Array.prototype.push.apply(changes, this.buildStatements());\n    }\n  }\n\n  shouldEmitMetadata() {\n    const oldName = this.diff.oldSchema && this.diff.oldSchema.form ? this.diff.oldSchema.form.name : null;\n    const newName = this.diff.newSchema && this.diff.newSchema.form ? this.diff.newSchema.form.name : null;\n\n    // emit the metadata statements if there are already some changes being emitted or\n    // the form name changed.\n    return (this.changes.length > 0 || oldName !== newName);\n  }\n\n  viewName(name) {\n    return (this.options.tablePrefix || '') + name;\n  }\n\n  buildStatements() {\n    const statements = [];\n\n    const METADATA = false;\n\n    const schemaChangesTableName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'schema_changes');\n    const systemTablesName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'tables');\n    const systemTablesViewName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'tables_view');\n    const systemColumnsName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'columns');\n    const systemColumnsViewName = Utils.tableName(this.options.schema, this.options.prefix, this.options.quote, 'columns_view');\n\n    if (METADATA) {\n      statements.push(format('CREATE TABLE IF NOT EXISTS %s (name text NOT NULL, created_at timestamp with time zone NOT NULL, sql TEXT NOT NULL);',\n                             schemaChangesTableName));\n\n      statements.push(format('CREATE UNIQUE INDEX ON %s (name);',\n                             schemaChangesTableName));\n\n      statements.push(format('CREATE TABLE IF NOT EXISTS %s (name text, alias text, type text, parent text, form_id text, field text, field_type text, data_name text);',\n                             systemTablesName));\n\n      statements.push(format('CREATE OR REPLACE VIEW %s AS SELECT alias AS name, type, parent, form_id, field, field_type, data_name FROM %s;',\n                             systemTablesViewName, systemTablesName));\n\n      statements.push(format('CREATE INDEX idx_tables_name ON %s (name);',\n                             systemTablesName));\n\n      statements.push(format('CREATE INDEX idx_tables_alias ON %s (alias);',\n                             systemTablesName));\n\n      if (this.includeColumns) {\n        // field type\n        statements.push(format('CREATE TABLE IF NOT EXISTS %s (table_name text, table_alias text, name text, ordinal bigint, type text, nullable boolean, form_id text, field text, field_type text, data_name text, part text, data text);',\n                               systemColumnsName));\n\n        statements.push(format('CREATE OR REPLACE VIEW %s AS SELECT table_alias AS table_name, name, ordinal, type, nullable, form_id, field, field_type, data_name, part FROM %s;',\n                               systemColumnsViewName, systemColumnsName));\n\n        statements.push(format('CREATE INDEX idx_columns_table_name ON %s (table_name);',\n                               systemColumnsName));\n\n        statements.push(format('CREATE INDEX idx_columns_table_alias ON %s (table_alias);',\n                               systemColumnsName));\n      }\n    }\n\n    // drop old metadata\n    for (const view of this.oldViews) {\n      statements.push(format('DELETE FROM %s WHERE name = %s;',\n                             systemTablesName,\n                             pgvalue(view.name)));\n\n      if (this.includeColumns) {\n        statements.push(format('DELETE FROM %s WHERE table_name = %s;',\n                               systemColumnsName,\n                               pgvalue(view.name)));\n      }\n    }\n\n    // create new metadata\n    for (const view of this.newViews) {\n      const viewName = this.viewName(view.name);\n      const viewAlias = view.alias || view.table.alias;\n      const viewType = view.type || view.table.type;\n\n      // skip the _full and 'values' tables\n      if (viewType === 'values' || view.variant != null) {\n        continue;\n      }\n\n      statements.push(format('DELETE FROM %s WHERE name = %s;',\n                             systemTablesName,\n                             pgvalue(viewName)));\n\n      if (this.includeColumns) {\n        statements.push(format('DELETE FROM %s WHERE table_name = %s;',\n                               systemColumnsName,\n                               pgvalue(viewName)));\n      }\n\n      let element = view.element || view.table.element;\n\n      let parentViewName = null;\n\n      const {parent} = view.table;\n\n      if (parent) {\n        if (this.useAliases) {\n          parentViewName = parent.alias;\n        } else {\n          parentViewName = this.newViews.find(v => v.table === parent && v.variant == null).name;\n        }\n      }\n\n      statements.push(format('INSERT INTO %s (name, alias, type, parent, form_id, field, field_type, data_name) SELECT %s, %s, %s, %s, %s, %s, %s, %s;',\n                             systemTablesName,\n                             pgvalue(viewName),\n                             pgvalue(viewAlias),\n                             pgvalue(viewType),\n                             pgvalue(parentViewName),\n                             pgvalue(view.table.form_id),\n                             pgvalue(element ? element.key : null),\n                             pgvalue(element ? element.type : null),\n                             pgvalue(element ? element.data_name : null)));\n\n      if (this.includeColumns) {\n        for (let i = 0; i < view.columns.length; ++i) {\n          const column = view.columns[i];\n\n          // statements.push(format('DELETE FROM %s WHERE table_name = %s AND name = %s;',\n          //                        systemColumnsName,\n          //                        pgvalue(viewName),\n          //                        pgvalue(column.alias)));\n\n          let field = null;\n          let fieldType = null;\n          let dataName = null;\n          let part = null;\n          const data = null;\n\n          element = column.column.element;\n\n          if (element) {\n            field = element.key;\n            fieldType = element.type;\n            dataName = element.data_name;\n            part = column.column.suffix ? column.column.suffix.replace(/^_/, '') : null;\n            // data = JSON.stringify(element);\n          }\n\n          statements.push(format('INSERT INTO %s (table_name, table_alias, name, ordinal, type, nullable, form_id, field, field_type, data_name, part, data)\\n' +\n                                 'SELECT %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s;',\n                                 systemColumnsName,\n                                 pgvalue(viewName),\n                                 pgvalue(viewAlias),\n                                 pgvalue(column.alias),\n                                 pgvalue(i + 1),\n                                 pgvalue(column.column.type),\n                                 pgvalue(column.column.allowNull ? 1 : 0),\n                                 pgvalue(view.table.form_id),\n                                 pgvalue(field),\n                                 pgvalue(fieldType),\n                                 pgvalue(dataName),\n                                 pgvalue(part),\n                                 pgvalue(data)));\n        }\n      }\n    }\n\n    return statements.map(s => {\n      return new sqldiff.SchemaChange('raw', {sql: s});\n    });\n  }\n}\n"],"mappings":"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"}