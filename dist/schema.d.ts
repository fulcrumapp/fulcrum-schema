export default class Schema {
    constructor(form: any, columns: any, options: any);
    prefix: string;
    form: any;
    columns: any;
    options: any;
    elements: any[];
    schemaElements: any;
    buildSchema(): void;
    tables: any[] | undefined;
    views: any[] | undefined;
    formTable: any;
    valuesTable: any;
    alias(part: any, escapePart?: boolean): any;
    escapeDataName(dataName: any): any;
    escapeSlashes(name: any): any;
    buildFormTable(): any;
    buildValuesTable(): any;
    buildRepeatableTable(parentTable: any, element: any): any;
    buildDataColumns(): void;
    buildViews(): void;
    viewColumns: {} | undefined;
    buildViewForTable(table: any, view: any): void;
    buildIndexes(): void;
    viewColumnName(view: any, table: any, column: any): any;
    launderViewColumnName(view: any, column: any, name: any): any;
    processElement(element: any, elementTable: any): void;
    addStringColumn(table: any, name: any, suffix: any): void;
    addStringElement(table: any, element: any, suffix: any): void;
    addDateElement(table: any, element: any, suffix: any): void;
    addTimeElement(table: any, element: any, suffix: any): void;
    addTimestampElement(table: any, element: any, suffix: any): void;
    addDoubleElement(table: any, element: any, suffix: any): void;
    addBooleanElement(table: any, element: any, suffix: any): void;
    addIntegerElement(table: any, element: any, suffix: any): void;
    addArrayElement(table: any, element: any, suffix: any): void;
    addColumn(table: any, name: any, type: any, suffix: any): void;
    addElement(table: any, element: any, type: any, suffix: any): void;
    maybeComplexType(type: any): any;
    addMediaElement(table: any, element: any): void;
    addRecordLinkElement(parentTable: any, element: any): void;
    addRepeatableElement(parentTable: any, element: any): void;
}
