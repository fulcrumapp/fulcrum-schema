{"version":3,"sources":["../src/schema.js"],"names":["Table","sqldiff","View","Schema","form","columns","options","prefix","elements","Utils","flattenElements","schemaElements","DataElements","find","buildSchema","tables","views","formTable","buildFormTable","valuesTable","buildValuesTable","push","buildDataColumns","buildViews","buildIndexes","part","escapePart","partName","escapeDataName","escapeSlashes","name","dataName","replace","table","row_id","type","alias","form_id","id","systemFormTableColumns","column","formColumn","_","clone","system","addColumn","onAddFormTable","schema","systemValuesTableColumns","valueColumn","parentTable","element","key","parent","data_name","systemRepeatableTableColumns","attrs","onAddRepeatableTable","processElement","viewColumns","view","buildViewForTable","fullView","variant","columnNames","viewColumnName","indexDefinitions","systemFormTableIndexes","systemRepeatableTableIndexes","systemValuesTableIndexes","index","indexDefinition","addIndex","systemFormFullViewColumns","systemFormViewColumns","systemRepeatableFullViewColumns","systemRepeatableViewColumns","systemValuesViewColumns","suffix","launderViewColumnName","count","rawName","substring","toLowerCase","newName","toString","length","elementTable","numeric","addDoubleElement","addStringElement","multiple","addArrayElement","addMediaElement","addTimestampElement","addDateElement","addTimeElement","addRepeatableElement","addRecordLinkElement","display","style","console","log","addElement","dataType","disableArrays","includeMediaCaptions","includeMediaURLs","includeMediaViewURLs","value","clause","filter","PhotoField","VideoField","AudioField","childTable","buildRepeatableTable","childElements","childElement"],"mappings":"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","file":"schema.js","sourcesContent":["import _ from 'underscore';\nimport Utils from './utils';\nimport sqldiff from 'sqldiff';\nimport {format} from 'util';\nimport DataElements from './data-elements';\n\nconst {Table, View} = sqldiff;\n\nexport default class Schema {\n  constructor(form, columns, options) {\n    this.prefix = 'f';\n    this.form = form;\n    this.columns = columns;\n    this.options = options || {};\n    this.elements = Utils.flattenElements(this.form.elements, false);\n    this.schemaElements = DataElements.find(this.elements);\n    this.buildSchema();\n  }\n\n  buildSchema() {\n    this.tables = [];\n    this.views = [];\n\n    this.formTable = this.buildFormTable();\n    this.valuesTable = this.buildValuesTable();\n\n    this.tables.push(this.formTable);\n    this.tables.push(this.valuesTable);\n\n    this.buildDataColumns();\n\n    this.buildViews();\n\n    this.buildIndexes();\n  }\n\n  alias(part, escapePart = true) {\n    if (part) {\n      const partName = escapePart ? this.escapeDataName(part) : part;\n\n      return this.escapeSlashes(this.form.name) + '/' + this.escapeSlashes(partName);\n    }\n    return this.escapeSlashes(this.form.name);\n  }\n\n  escapeDataName(dataName) {\n    // if a data name starts with an underscore, add an additional underscore to prevent\n    // collisions with future system-defined columns. e.g. `_symbol` becomes `__symbol`\n    // because at some point we might add a system column named `symbol` which needs the\n    // `_symbol` name.\n    if (dataName && dataName[0] === '_') {\n      return '_' + dataName;\n    }\n\n    return dataName || 'no_data_name';\n  }\n\n  escapeSlashes(name) {\n    return name.replace(/\\//g, '\\\\/');\n  }\n\n  buildFormTable() {\n    const table = new Table(format('form_%s', this.form.row_id),\n                            null,\n                            {type: 'form', alias: this.alias(), form_id: this.form.id});\n\n    for (const column of this.columns.systemFormTableColumns) {\n      const formColumn = _.clone(column);\n\n      formColumn.system = true;\n\n      table.addColumn(formColumn);\n    }\n\n    if (this.options.onAddFormTable) {\n      this.options.onAddFormTable({table, form: this.form, schema: this});\n    }\n\n    return table;\n  }\n\n  buildValuesTable() {\n    const table = new Table(format('form_%s_values', this.form.row_id),\n                            null,\n                            {type: 'values', alias: this.alias('values'), form_id: this.form.id});\n\n    for (const column of this.columns.systemValuesTableColumns) {\n      const valueColumn = _.clone(column);\n\n      valueColumn.system = true;\n\n      table.addColumn(valueColumn);\n    }\n\n    return table;\n  }\n\n  buildRepeatableTable(parentTable, element) {\n    const table = new Table(this.formTable.id + '_' + element.key,\n                            null,\n                            {type: 'repeatable', parent: parentTable, element: element, alias: this.alias(element.data_name), form_id: this.form.id});\n\n    for (const column of this.columns.systemRepeatableTableColumns) {\n      const attrs = _.clone(column);\n\n      attrs.id = element.key + '_' + column.name;\n      attrs.system = true;\n\n      table.addColumn(attrs);\n    }\n\n    if (this.options.onAddRepeatableTable) {\n      this.options.onAddRepeatableTable({table, parentTable, element, form: this.form, schema: this});\n    }\n\n    return table;\n  }\n\n  buildDataColumns() {\n    for (const element of this.schemaElements) {\n      this.processElement(element, this.formTable);\n    }\n  }\n\n  buildViews() {\n    this.viewColumns = {};\n\n    for (const table of this.tables) {\n      const view = new View(table.name + '_view', null, table);\n\n      this.buildViewForTable(table, view);\n\n      this.views.push(view);\n\n      if (table.type === 'form') {\n        const fullView = new View(table.name + '_view_full', null, table, {variant: 'full', alias: this.alias('_full', false)});\n\n        this.buildViewForTable(table, fullView);\n\n        this.views.push(fullView);\n      } else if (table.type === 'repeatable') {\n        const fullView = new View(table.name + '_view_full', null, table, {variant: 'full',\n                                                                           alias: this.alias(table.element.data_name) + '/_full'});\n\n        this.buildViewForTable(table, fullView);\n\n        this.views.push(fullView);\n      }\n    }\n  }\n\n  buildViewForTable(table, view) {\n    const columnNames = {};\n\n    for (const column of table.columns) {\n      const alias = this.viewColumnName(view, table, column);\n\n      if (alias == null) {\n        continue;\n      }\n\n      if (!columnNames[alias]) {\n        view.addColumn({column: column, alias: alias});\n        columnNames[alias] = column;\n      }\n    }\n  }\n\n  buildIndexes() {\n    for (const table of this.tables) {\n      let indexDefinitions = [];\n\n      if (table.type === 'form') {\n        indexDefinitions = this.columns.systemFormTableIndexes;\n      } else if (table.type === 'repeatable') {\n        indexDefinitions = this.columns.systemRepeatableTableIndexes;\n      } else if (table.type === 'values') {\n        indexDefinitions = this.columns.systemValuesTableIndexes;\n      }\n\n      for (const index of indexDefinitions) {\n        const indexDefinition = _.clone(index);\n\n        table.addIndex(indexDefinition);\n      }\n    }\n  }\n\n  viewColumnName(view, table, column) {\n    let name = null;\n\n    if (column.system) {\n      if (table.type === 'form') {\n        if (view.variant === 'full') {\n          name = this.columns.systemFormFullViewColumns[column.name];\n        } else {\n          name = this.columns.systemFormViewColumns[column.name];\n        }\n      } else if (table.type === 'repeatable') {\n        if (view.variant === 'full') {\n          name = this.columns.systemRepeatableFullViewColumns[column.name];\n        } else {\n          name = this.columns.systemRepeatableViewColumns[column.name];\n        }\n      } else if (table.type === 'values') {\n        name = this.columns.systemValuesViewColumns[column.name];\n      }\n\n      if (name == null) {\n        return null;\n      }\n\n      name = '_' + name;\n    } else if (column.element) {\n      name = this.escapeDataName(column.element.data_name) + (column.suffix || '');\n    } else {\n      name = column.name + (column.suffix || '');\n    }\n\n    if (name) {\n      // dedupe any columns\n      name = this.launderViewColumnName(view, column, name);\n    }\n\n    return name;\n  }\n\n  launderViewColumnName(view, column, name) {\n    const views = this.viewColumns;\n\n    views[view.name] = views[view.name] || {};\n\n    let count = 1;\n\n    const rawName = name.substring(0, 63).toLowerCase();\n    let newName = rawName;\n\n    while (views[view.name][newName]) {\n      newName = rawName.substring(0, 63 - (count.toString().length)) + count;\n      count++;\n    }\n\n    views[view.name][newName] = column;\n\n    return newName;\n  }\n\n  processElement(element, elementTable) {\n    switch (element.type) {\n      case 'TextField':\n        if (element.numeric) {\n          this.addDoubleElement(elementTable, element);\n        } else {\n          this.addStringElement(elementTable, element);\n        }\n        break;\n\n      case 'ChoiceField':\n        if (element.multiple) {\n          this.addArrayElement(elementTable, element);\n        } else {\n          this.addStringElement(elementTable, element);\n        }\n        break;\n\n      case 'ClassificationField':\n        this.addArrayElement(elementTable, element);\n        break;\n\n      case 'YesNoField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'PhotoField':\n      case 'VideoField':\n      case 'AudioField':\n        this.addMediaElement(elementTable, element);\n        break;\n\n      case 'SignatureField':\n        this.addStringElement(elementTable, element);\n        this.addTimestampElement(elementTable, element, 'timestamp');\n        break;\n\n      case 'BarcodeField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'DateTimeField':\n      case 'DateField':\n        this.addDateElement(elementTable, element);\n        break;\n\n      case 'TimeField':\n        this.addTimeElement(elementTable, element);\n        break;\n\n      case 'Repeatable':\n        this.addRepeatableElement(elementTable, element);\n        break;\n\n      case 'AddressField':\n        this.addStringElement(elementTable, element);\n        this.addStringElement(elementTable, element, 'sub_thoroughfare');\n        this.addStringElement(elementTable, element, 'thoroughfare');\n        this.addStringElement(elementTable, element, 'suite');\n        this.addStringElement(elementTable, element, 'locality');\n        this.addStringElement(elementTable, element, 'admin_area');\n        this.addStringElement(elementTable, element, 'postal_code');\n        this.addStringElement(elementTable, element, 'sub_admin_area');\n        this.addStringElement(elementTable, element, 'country');\n        break;\n\n      case 'HyperlinkField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'RecordLinkField':\n        this.addRecordLinkElement(elementTable, element);\n        break;\n\n      case 'CalculatedField':\n        switch (element.display.style) {\n          case 'number':\n          case 'date':\n          case 'currency':\n            this.addDoubleElement(elementTable, element);\n            break;\n          default:\n            this.addStringElement(elementTable, element);\n            break;\n        }\n        break;\n\n      default:\n        console.log('Unhandled element type', element.type);\n        break;\n    }\n  }\n\n  addStringColumn(table, name, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addColumn(table, name, 'string', suffix);\n  }\n\n  addStringElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'string', suffix);\n  }\n\n  addDateElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'date', suffix);\n  }\n\n  addTimeElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'time', suffix);\n  }\n\n  addTimestampElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'timestamp', suffix);\n  }\n\n  addDoubleElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'double', suffix);\n  }\n\n  addIntegerElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'integer', suffix);\n  }\n\n  addArrayElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n\n    const dataType = this.columns.disableArrays === true ? 'string' : 'array';\n\n    return this.addElement(table, element, dataType, suffix);\n  }\n\n  addColumn(table, name, type, suffix) {\n    let column = null;\n\n    if (suffix == null) {\n      suffix = '';\n    }\n\n    if (suffix) {\n      suffix = '_' + suffix;\n    }\n\n    column = {\n      id: name + suffix,\n      type: type,\n      element: null,\n      suffix: suffix\n    };\n\n    table.addColumn(column);\n  }\n\n  addElement(table, element, type, suffix) {\n    let column = null;\n\n    if (suffix == null) {\n      suffix = '';\n    }\n\n    if (suffix) {\n      suffix = '_' + suffix;\n    }\n\n    column = {\n      id: this.prefix + element.key + suffix,\n      type: type,\n      element: element,\n      suffix: suffix\n    };\n\n    table.addColumn(column);\n  }\n\n  addMediaElement(table, element) {\n    this.addArrayElement(table, element);\n\n    if (this.columns.includeMediaCaptions !== false) {\n      this.addArrayElement(table, element, 'captions');\n    }\n\n    if (this.columns.includeMediaURLs) {\n      this.addArrayElement(table, element, 'urls');\n    }\n\n    if (this.columns.includeMediaViewURLs) {\n      this.addStringElement(table, element, 'view_url');\n    }\n\n    const value = element.key.replace(/'/g, \"''\");\n\n    const clause = format('WHERE key = \\'%s\\'', value);\n\n    const filter = {\n      key: value\n    };\n\n    const alias = {\n      PhotoField: '_photo_id',\n      VideoField: '_video_id',\n      AudioField: '_audio_id'\n    }[element.type];\n\n    if (alias) {\n      const view = new View(this.formTable.id + '_' + element.key + '_view',\n                            null, this.valuesTable, {type: 'media', element: element, clause: clause, filter, alias: this.alias(element.data_name)});\n\n      view.addColumn({column: {name: 'record_resource_id', type: 'string'}, alias: 'record_id'});\n      view.addColumn({column: {name: 'parent_resource_id', type: 'string'}, alias: 'parent_id'});\n      view.addColumn({column: {name: 'text_value', type: 'string'}, alias: alias});\n\n      this.views.push(view);\n    }\n  }\n\n  addRecordLinkElement(parentTable, element) {\n    this.addArrayElement(parentTable, element);\n\n    const value = element.key.replace(/'/g, \"''\");\n\n    const clause = format('WHERE key = \\'%s\\'', value);\n\n    const view = new View(this.formTable.id + '_' + element.key + '_view',\n                          null, this.valuesTable, {type: 'link', element: element, clause: clause, alias: this.alias(element.data_name)});\n\n    view.addColumn({column: {name: 'record_resource_id', type: 'string'}, alias: 'source_record_id'});\n    view.addColumn({column: {name: 'parent_resource_id', type: 'string'}, alias: 'parent_id'});\n    view.addColumn({column: {name: 'text_value', type: 'string'}, alias: 'linked_record_id'});\n\n    this.views.push(view);\n  }\n\n  addRepeatableElement(parentTable, element) {\n    const childTable = this.buildRepeatableTable(parentTable, element);\n\n    this.tables.push(childTable);\n\n    const elements = Utils.flattenElements(element.elements, false);\n\n    const childElements = DataElements.find(elements);\n\n    for (const childElement of childElements) {\n      this.processElement(childElement, childTable);\n    }\n  }\n}\n"]}