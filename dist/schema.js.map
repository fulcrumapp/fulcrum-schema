{"version":3,"sources":["../src/schema.js"],"names":["Table","View","sqldiff","SIMPLE_TYPES","Schema","constructor","form","columns","options","prefix","elements","Utils","flattenElements","schemaElements","DataElements","find","buildSchema","calculatedFieldDateFormat","tables","views","formTable","buildFormTable","valuesTable","buildValuesTable","push","buildDataColumns","buildViews","buildIndexes","alias","part","escapePart","partName","escapeDataName","escapeSlashes","name","dataName","replace","table","row_id","type","form_id","id","column","systemFormTableColumns","formColumn","system","maybeComplexType","addColumn","onAddFormTable","schema","systemValuesTableColumns","valueColumn","buildRepeatableTable","parentTable","element","key","parent","data_name","systemRepeatableTableColumns","attrs","onAddRepeatableTable","processElement","viewColumns","systemFormViewColumns","view","buildViewForTable","fullView","variant","columnNames","viewColumnName","indexDefinitions","systemFormTableIndexes","systemRepeatableTableIndexes","systemValuesTableIndexes","index","indexDefinition","isComplex","method","skip","disableComplexTypes","addIndex","systemFormFullViewColumns","systemRepeatableFullViewColumns","systemRepeatableViewColumns","systemValuesViewColumns","suffix","launderViewColumnName","count","rawName","substring","toLowerCase","newName","toString","length","elementTable","numeric","addDoubleElement","addStringElement","multiple","addArrayElement","addMediaElement","addTimestampElement","addDateElement","addTimeElement","addRepeatableElement","addRecordLinkElement","display","style","console","log","addStringColumn","addElement","addIntegerElement","dataType","disableArrays","indexOf","includeMediaCaptions","includeMediaURLs","includeMediaViewURLs","value","clause","filter","PhotoField","VideoField","AudioField","AttachmentField","childTable","childElements","childElement"],"mappings":"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","sourcesContent":["import { clone } from 'lodash';\nimport Utils from './utils';\nimport sqldiff from 'sqldiff';\nimport {format} from 'util';\nimport DataElements from './data-elements';\n\nconst {Table, View} = sqldiff;\n\nconst SIMPLE_TYPES = [\n  'pk',\n  'text',\n  'string',\n  'date',\n  'time',\n  'timestamp',\n  'double',\n  'integer',\n  'boolean'\n];\n\nexport default class Schema {\n  constructor(form, columns, options) {\n    this.prefix = 'f';\n    this.form = form;\n    this.columns = columns;\n    this.options = options || {};\n    this.elements = Utils.flattenElements(this.form.elements, false);\n    this.schemaElements = DataElements.find(this.elements);\n    this.buildSchema();\n\n    columns.calculatedFieldDateFormat = columns.calculatedFieldDateFormat === 'date' ? 'date' : 'double';\n  }\n\n  buildSchema() {\n    this.tables = [];\n    this.views = [];\n\n    this.formTable = this.buildFormTable();\n    this.valuesTable = this.buildValuesTable();\n\n    this.tables.push(this.formTable);\n    this.tables.push(this.valuesTable);\n\n    this.buildDataColumns();\n\n    this.buildViews();\n\n    this.buildIndexes();\n  }\n\n  alias(part, escapePart = true) {\n    if (part) {\n      const partName = escapePart ? this.escapeDataName(part) : part;\n\n      return this.escapeSlashes(this.form.name) + '/' + this.escapeSlashes(partName);\n    }\n    return this.escapeSlashes(this.form.name);\n  }\n\n  escapeDataName(dataName) {\n    // if a data name starts with an underscore, add an additional underscore to prevent\n    // collisions with future system-defined columns. e.g. `_symbol` becomes `__symbol`\n    // because at some point we might add a system column named `symbol` which needs the\n    // `_symbol` name.\n    if (dataName && dataName[0] === '_') {\n      return '_' + dataName;\n    }\n\n    return dataName || 'no_data_name';\n  }\n\n  escapeSlashes(name) {\n    return name.replace(/\\//g, '\\\\/');\n  }\n\n  buildFormTable() {\n    const table = new Table(format('form_%s', this.form.row_id),\n                            null,\n                            {type: 'form', alias: this.alias(), form_id: this.form.id});\n\n    for (const column of this.columns.systemFormTableColumns) {\n      const formColumn = clone(column);\n\n      formColumn.system = true;\n      formColumn.type = this.maybeComplexType(formColumn.type);\n\n      table.addColumn(formColumn);\n    }\n\n    if (this.options.onAddFormTable) {\n      this.options.onAddFormTable({table, form: this.form, schema: this});\n    }\n\n    return table;\n  }\n\n  buildValuesTable() {\n    const table = new Table(format('form_%s_values', this.form.row_id),\n                            null,\n                            {type: 'values', alias: this.alias('values'), form_id: this.form.id});\n\n    for (const column of this.columns.systemValuesTableColumns) {\n      const valueColumn = clone(column);\n\n      valueColumn.system = true;\n      valueColumn.type = this.maybeComplexType(valueColumn.type);\n\n      table.addColumn(valueColumn);\n    }\n\n    return table;\n  }\n\n  buildRepeatableTable(parentTable, element) {\n    const table = new Table(this.formTable.id + '_' + element.key,\n                            null,\n                            {type: 'repeatable', parent: parentTable, element: element, alias: this.alias(element.data_name), form_id: this.form.id});\n\n    for (const column of this.columns.systemRepeatableTableColumns) {\n      const attrs = clone(column);\n\n      attrs.id = element.key + '_' + column.name;\n      attrs.system = true;\n      attrs.type = this.maybeComplexType(attrs.type);\n\n      table.addColumn(attrs);\n    }\n\n    if (this.options.onAddRepeatableTable) {\n      this.options.onAddRepeatableTable({table, parentTable, element, form: this.form, schema: this});\n    }\n\n    return table;\n  }\n\n  buildDataColumns() {\n    for (const element of this.schemaElements) {\n      this.processElement(element, this.formTable);\n    }\n  }\n\n  buildViews() {\n    this.viewColumns = {};\n\n    if (!this.columns.systemFormViewColumns) {\n      return;\n    }\n\n    for (const table of this.tables) {\n      const view = new View(table.name + '_view', null, table);\n\n      this.buildViewForTable(table, view);\n\n      this.views.push(view);\n\n      if (table.type === 'form') {\n        const fullView = new View(table.name + '_view_full', null, table, {variant: 'full', alias: this.alias('_full', false)});\n\n        this.buildViewForTable(table, fullView);\n\n        this.views.push(fullView);\n      } else if (table.type === 'repeatable') {\n        const fullView = new View(table.name + '_view_full', null, table, {variant: 'full',\n                                                                           alias: this.alias(table.element.data_name) + '/_full'});\n\n        this.buildViewForTable(table, fullView);\n\n        this.views.push(fullView);\n      }\n    }\n  }\n\n  buildViewForTable(table, view) {\n    const columnNames = {};\n\n    for (const column of table.columns) {\n      const alias = this.viewColumnName(view, table, column);\n\n      if (alias == null) {\n        continue;\n      }\n\n      if (!columnNames[alias]) {\n        view.addColumn({column: column, alias: alias});\n        columnNames[alias] = column;\n      }\n    }\n  }\n\n  buildIndexes() {\n    for (const table of this.tables) {\n      let indexDefinitions = [];\n\n      if (table.type === 'form') {\n        indexDefinitions = this.columns.systemFormTableIndexes;\n      } else if (table.type === 'repeatable') {\n        indexDefinitions = this.columns.systemRepeatableTableIndexes;\n      } else if (table.type === 'values') {\n        indexDefinitions = this.columns.systemValuesTableIndexes;\n      }\n\n      for (const index of indexDefinitions) {\n        const indexDefinition = clone(index);\n\n        const isComplex = indexDefinition.method === 'gist' || indexDefinition.method === 'gin';\n\n        const skip = isComplex && this.columns.disableComplexTypes === true;\n\n        if (!skip) {\n          table.addIndex(indexDefinition);\n        }\n      }\n    }\n  }\n\n  viewColumnName(view, table, column) {\n    let name = null;\n\n    if (column.system) {\n      if (table.type === 'form') {\n        if (view.variant === 'full') {\n          name = this.columns.systemFormFullViewColumns[column.name];\n        } else {\n          name = this.columns.systemFormViewColumns[column.name];\n        }\n      } else if (table.type === 'repeatable') {\n        if (view.variant === 'full') {\n          name = this.columns.systemRepeatableFullViewColumns[column.name];\n        } else {\n          name = this.columns.systemRepeatableViewColumns[column.name];\n        }\n      } else if (table.type === 'values') {\n        name = this.columns.systemValuesViewColumns[column.name];\n      }\n\n      if (name == null) {\n        return null;\n      }\n\n      name = '_' + name;\n    } else if (column.element) {\n      name = this.escapeDataName(column.element.data_name) + (column.suffix || '');\n    } else {\n      name = column.name + (column.suffix || '');\n    }\n\n    if (name) {\n      // dedupe any columns\n      name = this.launderViewColumnName(view, column, name);\n    }\n\n    return name;\n  }\n\n  launderViewColumnName(view, column, name) {\n    const views = this.viewColumns;\n\n    views[view.name] = views[view.name] || {};\n\n    let count = 1;\n\n    const rawName = name.substring(0, 63).toLowerCase();\n    let newName = rawName;\n\n    while (views[view.name][newName]) {\n      newName = rawName.substring(0, 63 - (count.toString().length)) + count;\n      count++;\n    }\n\n    views[view.name][newName] = column;\n\n    return newName;\n  }\n\n  processElement(element, elementTable) {\n    switch (element.type) {\n      case 'TextField':\n        if (element.numeric) {\n          this.addDoubleElement(elementTable, element);\n        } else {\n          this.addStringElement(elementTable, element);\n        }\n        break;\n\n      case 'ChoiceField':\n        if (element.multiple) {\n          this.addArrayElement(elementTable, element);\n        } else {\n          this.addStringElement(elementTable, element);\n        }\n        break;\n\n      case 'ClassificationField':\n        this.addArrayElement(elementTable, element);\n        break;\n\n      case 'YesNoField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'PhotoField':\n      case 'VideoField':\n      case 'AudioField':\n      case 'AttachmentField':\n        this.addMediaElement(elementTable, element);\n        break;\n\n      case 'SignatureField':\n        this.addStringElement(elementTable, element);\n        this.addTimestampElement(elementTable, element, 'timestamp');\n        break;\n\n      case 'BarcodeField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'DateTimeField':\n      case 'DateField':\n        this.addDateElement(elementTable, element);\n        break;\n\n      case 'TimeField':\n        this.addTimeElement(elementTable, element);\n        break;\n\n      case 'Repeatable':\n        this.addRepeatableElement(elementTable, element);\n        break;\n\n      case 'AddressField':\n        this.addStringElement(elementTable, element);\n        this.addStringElement(elementTable, element, 'sub_thoroughfare');\n        this.addStringElement(elementTable, element, 'thoroughfare');\n        this.addStringElement(elementTable, element, 'suite');\n        this.addStringElement(elementTable, element, 'locality');\n        this.addStringElement(elementTable, element, 'admin_area');\n        this.addStringElement(elementTable, element, 'postal_code');\n        this.addStringElement(elementTable, element, 'sub_admin_area');\n        this.addStringElement(elementTable, element, 'country');\n        break;\n\n      case 'HyperlinkField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'RecordLinkField':\n        this.addRecordLinkElement(elementTable, element);\n        break;\n\n      case 'CalculatedField':\n        switch (element.display.style) {\n          case 'date':\n            if (this.columns.calculatedFieldDateFormat === 'date') {\n              this.addDateElement(elementTable, element);\n            } else {\n              this.addDoubleElement(elementTable, element);\n            }\n            break;\n          case 'number':\n          case 'currency':\n            this.addDoubleElement(elementTable, element);\n            break;\n          default:\n            this.addStringElement(elementTable, element);\n            break;\n        }\n        break;\n\n      default:\n        console.log('Unhandled element type', element.type);\n        break;\n    }\n  }\n\n  addStringColumn(table, name, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addColumn(table, name, 'string', suffix);\n  }\n\n  addStringElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'string', suffix);\n  }\n\n  addDateElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'date', suffix);\n  }\n\n  addTimeElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'time', suffix);\n  }\n\n  addTimestampElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'timestamp', suffix);\n  }\n\n  addDoubleElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'double', suffix);\n  }\n\n  addIntegerElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'integer', suffix);\n  }\n\n  addArrayElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n\n    const dataType = this.columns.disableArrays === true ? 'string' : 'array';\n\n    return this.addElement(table, element, dataType, suffix);\n  }\n\n  addColumn(table, name, type, suffix) {\n    let column = null;\n\n    if (suffix == null) {\n      suffix = '';\n    }\n\n    if (suffix) {\n      suffix = '_' + suffix;\n    }\n\n    column = {\n      id: name + suffix,\n      type: this.maybeComplexType(type),\n      element: null,\n      suffix: suffix\n    };\n\n    table.addColumn(column);\n  }\n\n  addElement(table, element, type, suffix) {\n    let column = null;\n\n    if (suffix == null) {\n      suffix = '';\n    }\n\n    if (suffix) {\n      suffix = '_' + suffix;\n    }\n\n    column = {\n      id: this.prefix + element.key + suffix,\n      type: this.maybeComplexType(type),\n      element: element,\n      suffix: suffix\n    };\n\n    table.addColumn(column);\n  }\n\n  maybeComplexType(type) {\n    const isComplex = SIMPLE_TYPES.indexOf(type) === -1;\n\n    return isComplex && this.columns.disableComplexTypes === true ? 'string' : type;\n  }\n\n  addMediaElement(table, element) {\n    this.addArrayElement(table, element);\n\n    if (this.columns.includeMediaCaptions !== false) {\n      this.addArrayElement(table, element, 'captions');\n    }\n\n    if (this.columns.includeMediaURLs) {\n      this.addArrayElement(table, element, 'urls');\n    }\n\n    if (this.columns.includeMediaViewURLs) {\n      this.addStringElement(table, element, 'view_url');\n    }\n\n    const value = element.key.replace(/'/g, \"''\");\n\n    const clause = format('WHERE key = \\'%s\\'', value);\n\n    const filter = {\n      key: value\n    };\n\n    const alias = {\n      PhotoField: '_photo_id',\n      VideoField: '_video_id',\n      AudioField: '_audio_id',\n      AttachmentField: '_attachment_id'\n    }[element.type];\n\n    if (alias) {\n      const view = new View(this.formTable.id + '_' + element.key + '_view',\n                            null, this.valuesTable, {type: 'media', element: element, clause: clause, filter, alias: this.alias(element.data_name)});\n\n      view.addColumn({column: {name: 'record_resource_id', type: 'string'}, alias: 'record_id'});\n      view.addColumn({column: {name: 'parent_resource_id', type: 'string'}, alias: 'parent_id'});\n      view.addColumn({column: {name: 'text_value', type: 'string'}, alias: alias});\n\n      this.views.push(view);\n    }\n  }\n\n  addRecordLinkElement(parentTable, element) {\n    this.addArrayElement(parentTable, element);\n\n    const value = element.key.replace(/'/g, \"''\");\n\n    const clause = format('WHERE key = \\'%s\\'', value);\n\n    const view = new View(this.formTable.id + '_' + element.key + '_view',\n                          null, this.valuesTable, {type: 'link', element: element, clause: clause, alias: this.alias(element.data_name)});\n\n    view.addColumn({column: {name: 'record_resource_id', type: 'string'}, alias: 'source_record_id'});\n    view.addColumn({column: {name: 'parent_resource_id', type: 'string'}, alias: 'parent_id'});\n    view.addColumn({column: {name: 'text_value', type: 'string'}, alias: 'linked_record_id'});\n\n    this.views.push(view);\n  }\n\n  addRepeatableElement(parentTable, element) {\n    const childTable = this.buildRepeatableTable(parentTable, element);\n\n    this.tables.push(childTable);\n\n    const elements = Utils.flattenElements(element.elements, false);\n\n    const childElements = DataElements.find(elements);\n\n    for (const childElement of childElements) {\n      this.processElement(childElement, childTable);\n    }\n  }\n}\n"],"file":"schema.js"}