{"version":3,"sources":["../src/schema.js"],"names":["Table","sqldiff","View","SIMPLE_TYPES","Schema","form","columns","options","prefix","elements","Utils","flattenElements","schemaElements","DataElements","find","buildSchema","calculatedFieldDateFormat","tables","views","formTable","buildFormTable","valuesTable","buildValuesTable","push","buildDataColumns","buildViews","buildIndexes","alias","part","escapePart","partName","escapeDataName","escapeSlashes","name","dataName","replace","table","row_id","type","form_id","id","systemFormTableColumns","column","formColumn","system","maybeComplexType","addColumn","onAddFormTable","schema","systemValuesTableColumns","valueColumn","buildRepeatableTable","parentTable","element","key","parent","data_name","systemRepeatableTableColumns","attrs","onAddRepeatableTable","processElement","viewColumns","systemFormViewColumns","view","buildViewForTable","fullView","variant","columnNames","viewColumnName","projection","escapeIdentifier","raw","indexDefinitions","systemFormTableIndexes","systemRepeatableTableIndexes","systemValuesTableIndexes","index","indexDefinition","isComplex","method","skip","disableComplexTypes","addIndex","systemFormFullViewColumns","systemRepeatableFullViewColumns","systemRepeatableViewColumns","systemValuesViewColumns","suffix","launderViewColumnName","count","rawName","substring","toLowerCase","newName","toString","length","elementTable","numeric","addDoubleElement","addStringElement","multiple","addArrayElement","addMediaElement","addTimestampElement","addDateElement","addTimeElement","addRepeatableElement","addRecordLinkElement","display","style","addBooleanElement","console","log","addStringColumn","addElement","addIntegerElement","dataType","disableArrays","indexOf","includeMediaCaptions","includeMediaURLs","includeMediaViewURLs","value","clause","filter","PhotoField","VideoField","AudioField","AttachmentField","childTable","childElements","childElement"],"mappings":"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","sourcesContent":["import { clone } from 'lodash';\nimport Utils from './utils';\nimport sqldiff from 'sqldiff';\nimport {format} from 'util';\nimport DataElements from './data-elements';\n\nconst {Table, View} = sqldiff;\n\nconst SIMPLE_TYPES = [\n  'pk',\n  'text',\n  'string',\n  'date',\n  'time',\n  'timestamp',\n  'double',\n  'integer',\n  'boolean'\n];\n\nexport default class Schema {\n  constructor(form, columns, options) {\n    this.prefix = 'f';\n    this.form = form;\n    this.columns = columns;\n    this.options = options || {};\n    this.elements = Utils.flattenElements(this.form.elements, false);\n    this.schemaElements = DataElements.find(this.elements);\n    this.buildSchema();\n\n    columns.calculatedFieldDateFormat = columns.calculatedFieldDateFormat === 'date' ? 'date' : 'double';\n  }\n\n  buildSchema() {\n    this.tables = [];\n    this.views = [];\n\n    this.formTable = this.buildFormTable();\n    this.valuesTable = this.buildValuesTable();\n\n    this.tables.push(this.formTable);\n    this.tables.push(this.valuesTable);\n\n    this.buildDataColumns();\n\n    this.buildViews();\n\n    this.buildIndexes();\n  }\n\n  alias(part, escapePart = true) {\n    if (part) {\n      const partName = escapePart ? this.escapeDataName(part) : part;\n\n      return this.escapeSlashes(this.form.name) + '/' + this.escapeSlashes(partName);\n    }\n    return this.escapeSlashes(this.form.name);\n  }\n\n  escapeDataName(dataName) {\n    // if a data name starts with an underscore, add an additional underscore to prevent\n    // collisions with future system-defined columns. e.g. `_symbol` becomes `__symbol`\n    // because at some point we might add a system column named `symbol` which needs the\n    // `_symbol` name.\n    if (dataName && dataName[0] === '_') {\n      return '_' + dataName;\n    }\n\n    return dataName || 'no_data_name';\n  }\n\n  escapeSlashes(name) {\n    return name.replace(/\\//g, '\\\\/');\n  }\n\n  buildFormTable() {\n    const table = new Table(format('form_%s', this.form.row_id),\n                            null,\n                            {type: 'form', alias: this.alias(), form_id: this.form.id});\n\n    for (const column of this.columns.systemFormTableColumns) {\n      const formColumn = clone(column);\n\n      formColumn.system = true;\n      formColumn.type = this.maybeComplexType(formColumn.type);\n\n      table.addColumn(formColumn);\n    }\n\n    if (this.options.onAddFormTable) {\n      this.options.onAddFormTable({table, form: this.form, schema: this});\n    }\n\n    return table;\n  }\n\n  buildValuesTable() {\n    const table = new Table(format('form_%s_values', this.form.row_id),\n                            null,\n                            {type: 'values', alias: this.alias('values'), form_id: this.form.id});\n\n    for (const column of this.columns.systemValuesTableColumns) {\n      const valueColumn = clone(column);\n\n      valueColumn.system = true;\n      valueColumn.type = this.maybeComplexType(valueColumn.type);\n\n      table.addColumn(valueColumn);\n    }\n\n    return table;\n  }\n\n  buildRepeatableTable(parentTable, element) {\n    const table = new Table(this.formTable.id + '_' + element.key,\n                            null,\n                            {type: 'repeatable', parent: parentTable, element: element, alias: this.alias(element.data_name), form_id: this.form.id});\n\n    for (const column of this.columns.systemRepeatableTableColumns) {\n      const attrs = clone(column);\n\n      attrs.id = element.key + '_' + column.name;\n      attrs.system = true;\n      attrs.type = this.maybeComplexType(attrs.type);\n\n      table.addColumn(attrs);\n    }\n\n    if (this.options.onAddRepeatableTable) {\n      this.options.onAddRepeatableTable({table, parentTable, element, form: this.form, schema: this});\n    }\n\n    return table;\n  }\n\n  buildDataColumns() {\n    for (const element of this.schemaElements) {\n      this.processElement(element, this.formTable);\n    }\n  }\n\n  buildViews() {\n    this.viewColumns = {};\n\n    if (!this.columns.systemFormViewColumns) {\n      return;\n    }\n\n    for (const table of this.tables) {\n      const view = new View(table.name + '_view', null, table);\n\n      this.buildViewForTable(table, view);\n\n      this.views.push(view);\n\n      if (table.type === 'form') {\n        const fullView = new View(table.name + '_view_full', null, table, {variant: 'full', alias: this.alias('_full', false)});\n\n        this.buildViewForTable(table, fullView);\n\n        this.views.push(fullView);\n      } else if (table.type === 'repeatable') {\n        const fullView = new View(table.name + '_view_full', null, table, {variant: 'full',\n                                                                           alias: this.alias(table.element.data_name) + '/_full'});\n\n        this.buildViewForTable(table, fullView);\n\n        this.views.push(fullView);\n      }\n    }\n  }\n\n  buildViewForTable(table, view) {\n    const columnNames = {};\n\n    for (const column of table.columns) {\n      const alias = this.viewColumnName(view, table, column);\n\n      if (alias == null) {\n        continue;\n      }\n\n      if (!columnNames[alias]) {\n        if (column.type === 'boolean') {\n          const projection = `${column.name} IS NOT NULL AND ${column.name} = 't' AS ${Utils.escapeIdentifier(alias)}`;\n          view.addColumn({column: column, alias: alias, raw: projection});\n        } else {\n          view.addColumn({column: column, alias: alias});\n        }\n\n        columnNames[alias] = column;\n      }\n    }\n  }\n\n  buildIndexes() {\n    for (const table of this.tables) {\n      let indexDefinitions = [];\n\n      if (table.type === 'form') {\n        indexDefinitions = this.columns.systemFormTableIndexes;\n      } else if (table.type === 'repeatable') {\n        indexDefinitions = this.columns.systemRepeatableTableIndexes;\n      } else if (table.type === 'values') {\n        indexDefinitions = this.columns.systemValuesTableIndexes;\n      }\n\n      for (const index of indexDefinitions) {\n        const indexDefinition = clone(index);\n\n        const isComplex = indexDefinition.method === 'gist' || indexDefinition.method === 'gin';\n\n        const skip = isComplex && this.columns.disableComplexTypes === true;\n\n        if (!skip) {\n          table.addIndex(indexDefinition);\n        }\n      }\n    }\n  }\n\n  viewColumnName(view, table, column) {\n    let name = null;\n\n    if (column.system) {\n      if (table.type === 'form') {\n        if (view.variant === 'full') {\n          name = this.columns.systemFormFullViewColumns[column.name];\n        } else {\n          name = this.columns.systemFormViewColumns[column.name];\n        }\n      } else if (table.type === 'repeatable') {\n        if (view.variant === 'full') {\n          name = this.columns.systemRepeatableFullViewColumns[column.name];\n        } else {\n          name = this.columns.systemRepeatableViewColumns[column.name];\n        }\n      } else if (table.type === 'values') {\n        name = this.columns.systemValuesViewColumns[column.name];\n      }\n\n      if (name == null) {\n        return null;\n      }\n\n      name = '_' + name;\n    } else if (column.element) {\n      name = this.escapeDataName(column.element.data_name) + (column.suffix || '');\n    } else {\n      name = column.name + (column.suffix || '');\n    }\n\n    if (name) {\n      // dedupe any columns\n      name = this.launderViewColumnName(view, column, name);\n    }\n\n    return name;\n  }\n\n  launderViewColumnName(view, column, name) {\n    const views = this.viewColumns;\n\n    views[view.name] = views[view.name] || {};\n\n    let count = 1;\n\n    const rawName = name.substring(0, 63).toLowerCase();\n    let newName = rawName;\n\n    while (views[view.name][newName]) {\n      newName = rawName.substring(0, 63 - (count.toString().length)) + count;\n      count++;\n    }\n\n    views[view.name][newName] = column;\n\n    return newName;\n  }\n\n  processElement(element, elementTable) {\n    switch (element.type) {\n      case 'TextField':\n        if (element.numeric) {\n          this.addDoubleElement(elementTable, element);\n        } else {\n          this.addStringElement(elementTable, element);\n        }\n        break;\n\n      case 'ChoiceField':\n        if (element.multiple) {\n          this.addArrayElement(elementTable, element);\n        } else {\n          this.addStringElement(elementTable, element);\n        }\n        break;\n\n      case 'ClassificationField':\n        this.addArrayElement(elementTable, element);\n        break;\n\n      case 'YesNoField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'PhotoField':\n      case 'VideoField':\n      case 'AudioField':\n      case 'AttachmentField':\n        this.addMediaElement(elementTable, element);\n        break;\n\n      case 'SignatureField':\n        this.addStringElement(elementTable, element);\n        this.addTimestampElement(elementTable, element, 'timestamp');\n        break;\n\n      case 'BarcodeField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'DateTimeField':\n      case 'DateField':\n        this.addDateElement(elementTable, element);\n        break;\n\n      case 'TimeField':\n        this.addTimeElement(elementTable, element);\n        break;\n\n      case 'Repeatable':\n        this.addRepeatableElement(elementTable, element);\n        break;\n\n      case 'AddressField':\n        this.addStringElement(elementTable, element);\n        this.addStringElement(elementTable, element, 'sub_thoroughfare');\n        this.addStringElement(elementTable, element, 'thoroughfare');\n        this.addStringElement(elementTable, element, 'suite');\n        this.addStringElement(elementTable, element, 'locality');\n        this.addStringElement(elementTable, element, 'admin_area');\n        this.addStringElement(elementTable, element, 'postal_code');\n        this.addStringElement(elementTable, element, 'sub_admin_area');\n        this.addStringElement(elementTable, element, 'country');\n        break;\n\n      case 'HyperlinkField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'RecordLinkField':\n        this.addRecordLinkElement(elementTable, element);\n        break;\n\n      case 'CalculatedField':\n        switch (element.display.style) {\n          case 'date':\n            if (this.columns.calculatedFieldDateFormat === 'date') {\n              this.addDateElement(elementTable, element);\n            } else {\n              this.addDoubleElement(elementTable, element);\n            }\n            break;\n          case 'number':\n          case 'currency':\n            this.addDoubleElement(elementTable, element);\n            break;\n          default:\n            this.addStringElement(elementTable, element);\n            break;\n        }\n        break;\n\n      case 'CheckboxField':\n        this.addBooleanElement(elementTable, element);\n        break;\n\n      case 'DynamicField':\n        this.addArrayElement(elementTable, element, 'metadata');\n        this.addArrayElement(elementTable, element, 'elements');\n        this.addArrayElement(elementTable, element, 'values');\n        break;\n\n      case 'LocationField':\n        this.addDoubleElement(elementTable, element, 'latitude');\n        this.addDoubleElement(elementTable, element, 'longitude');\n        this.addStringElement(elementTable, element, 'address');\n        break;\n\n      case 'ButtonField':\n        this.addStringElement(elementTable, element, 'label');\n        this.addStringElement(elementTable, element, 'type');\n        break;\n\n      default:\n        console.log('Unhandled element type', element.type);\n        break;\n    }\n  }\n\n  addStringColumn(table, name, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addColumn(table, name, 'string', suffix);\n  }\n\n  addStringElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'string', suffix);\n  }\n\n  addDateElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'date', suffix);\n  }\n\n  addTimeElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'time', suffix);\n  }\n\n  addTimestampElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'timestamp', suffix);\n  }\n\n  addDoubleElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'double', suffix);\n  }\n\n  addBooleanElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'boolean', suffix);\n  }\n\n  addIntegerElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'integer', suffix);\n  }\n\n  addArrayElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n\n    const dataType = this.columns.disableArrays === true ? 'string' : 'array';\n\n    return this.addElement(table, element, dataType, suffix);\n  }\n\n  addColumn(table, name, type, suffix) {\n    let column = null;\n\n    if (suffix == null) {\n      suffix = '';\n    }\n\n    if (suffix) {\n      suffix = '_' + suffix;\n    }\n\n    column = {\n      id: name + suffix,\n      type: this.maybeComplexType(type),\n      element: null,\n      suffix: suffix\n    };\n\n    table.addColumn(column);\n  }\n\n  addElement(table, element, type, suffix) {\n    let column = null;\n\n    if (suffix == null) {\n      suffix = '';\n    }\n\n    if (suffix) {\n      suffix = '_' + suffix;\n    }\n\n    column = {\n      id: this.prefix + element.key + suffix,\n      type: this.maybeComplexType(type),\n      element: element,\n      suffix: suffix\n    };\n\n    table.addColumn(column);\n  }\n\n  maybeComplexType(type) {\n    const isComplex = SIMPLE_TYPES.indexOf(type) === -1;\n\n    return isComplex && this.columns.disableComplexTypes === true ? 'string' : type;\n  }\n\n  addMediaElement(table, element) {\n    this.addArrayElement(table, element);\n\n    if (element.type !== 'AttachmentField') {\n      if (this.columns.includeMediaCaptions !== false) {\n        this.addArrayElement(table, element, 'captions');\n      }\n\n      if (this.columns.includeMediaURLs) {\n        this.addArrayElement(table, element, 'urls');\n      }\n\n      if (this.columns.includeMediaViewURLs) {\n        this.addStringElement(table, element, 'view_url');\n      }\n    }\n\n    if (element.type === 'AttachmentField') {\n      this.addArrayElement(table, element, 'names');\n    }\n\n    if (!this.columns.systemFormViewColumns) {\n      return;\n    }\n\n    const value = element.key.replace(/'/g, \"''\");\n\n    const clause = format('WHERE key = \\'%s\\'', value);\n\n    const filter = {\n      key: value\n    };\n\n    const alias = {\n      PhotoField: '_photo_id',\n      VideoField: '_video_id',\n      AudioField: '_audio_id',\n      AttachmentField: '_attachment_id'\n    }[element.type];\n\n    if (alias) {\n      const view = new View(this.formTable.id + '_' + element.key + '_view',\n                            null, this.valuesTable, {type: 'media', element: element, clause: clause, filter, alias: this.alias(element.data_name)});\n\n      view.addColumn({column: {name: 'record_resource_id', type: 'string'}, alias: 'record_id'});\n      view.addColumn({column: {name: 'parent_resource_id', type: 'string'}, alias: 'parent_id'});\n      view.addColumn({column: {name: 'text_value', type: 'string'}, alias: alias});\n\n      this.views.push(view);\n    }\n  }\n\n  addRecordLinkElement(parentTable, element) {\n    this.addArrayElement(parentTable, element);\n\n    if (!this.columns.systemFormViewColumns) {\n      return;\n    }\n\n    const value = element.key.replace(/'/g, \"''\");\n\n    const clause = format('WHERE key = \\'%s\\'', value);\n\n    const view = new View(this.formTable.id + '_' + element.key + '_view',\n                          null, this.valuesTable, {type: 'link', element: element, clause: clause, alias: this.alias(element.data_name)});\n\n    view.addColumn({column: {name: 'record_resource_id', type: 'string'}, alias: 'source_record_id'});\n    view.addColumn({column: {name: 'parent_resource_id', type: 'string'}, alias: 'parent_id'});\n    view.addColumn({column: {name: 'text_value', type: 'string'}, alias: 'linked_record_id'});\n\n    this.views.push(view);\n  }\n\n  addRepeatableElement(parentTable, element) {\n    const childTable = this.buildRepeatableTable(parentTable, element);\n\n    this.tables.push(childTable);\n\n    const elements = Utils.flattenElements(element.elements, false);\n\n    const childElements = DataElements.find(elements);\n\n    for (const childElement of childElements) {\n      this.processElement(childElement, childTable);\n    }\n  }\n}\n"],"file":"schema.js"}