{"version":3,"sources":["../src/schema.js"],"names":[],"mappings":"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","file":"schema.js","sourcesContent":["import _ from 'underscore';\nimport Utils from './utils';\nimport sqldiff from 'sqldiff';\nimport {format} from 'util';\nimport DataElements from './data-elements';\n\nconst {Table, View} = sqldiff;\n\nexport default class Schema {\n  constructor(form, columns, options) {\n    this.prefix = 'f';\n    this.form = form;\n    this.columns = columns;\n    this.options = options || {};\n    this.elements = Utils.flattenElements(this.form.elements, false);\n    this.schemaElements = DataElements.find(this.elements);\n    this.buildSchema();\n  }\n\n  buildSchema() {\n    this.tables = [];\n    this.views = [];\n\n    this.formTable = this.buildFormTable();\n    this.valuesTable = this.buildValuesTable();\n\n    this.tables.push(this.formTable);\n    this.tables.push(this.valuesTable);\n\n    this.buildDataColumns();\n    this.buildViews();\n  }\n\n  alias(part) {\n    if (part) {\n      return this.form.name + '/' + part;\n    }\n    return this.form.name;\n  }\n\n  buildFormTable() {\n    const table = new Table(format('form_%s', this.form.row_id),\n                            null,\n                            {type: 'form', alias: this.alias(), form_id: this.form.id});\n\n    for (const column of this.columns.systemFormTableColumns) {\n      const formColumn = _.clone(column);\n\n      formColumn.system = true;\n\n      table.addColumn(formColumn);\n    }\n\n    return table;\n  }\n\n  buildValuesTable() {\n    const table = new Table(format('form_%s_values', this.form.id),\n                            null,\n                            {type: 'values', alias: this.alias('values'), form_id: this.form.id});\n\n    for (const column of this.columns.systemValuesTableColumns) {\n      const valueColumn = _.clone(column);\n\n      valueColumn.system = true;\n\n      table.addColumn(valueColumn);\n    }\n\n    return table;\n  }\n\n  buildRepeatableTable(parentTable, element) {\n    const table = new Table(this.formTable.id + '_' + element.key,\n                            null,\n                            {type: 'repeatable', parent: parentTable, alias: this.alias(element.data_name), form_id: this.form.id});\n\n    for (const column of this.columns.systemRepeatableTableColumns) {\n      const attrs = _.clone(column);\n\n      attrs.id = element.key + '_' + column.name;\n      attrs.system = true;\n\n      table.addColumn(attrs);\n    }\n\n    return table;\n  }\n\n  buildDataColumns() {\n    for (const element of this.schemaElements) {\n      this.processElement(element, this.formTable);\n    }\n  }\n\n  buildViews() {\n    this.viewColumns = {};\n\n    for (const table of this.tables) {\n      const view = new View(table.name + '_view', null, table);\n\n      const columnNames = {};\n\n      for (const column of table.columns) {\n        let alias = this.viewColumnName(table, column);\n\n        if (alias == null) {\n          continue;\n        }\n\n        if (!columnNames[alias]) {\n          view.addColumn({column: column, alias: alias});\n          columnNames[alias] = column;\n        }\n      }\n\n      this.views.push(view);\n    }\n  }\n\n  viewColumnName(table, column) {\n    let name = null;\n\n    if (column.system) {\n      if (table.type === 'form') {\n        name = this.columns.systemFormViewColumns[column.name];\n      } else if (table.type === 'repeatable') {\n        name = this.columns.systemRepeatableViewColumns[column.name];\n      }\n    } else if (column.element) {\n      name = column.element.data_name + (column.suffix || '');\n    }\n\n    if (name) {\n      // dedupe any columns\n      name = this.launderViewColumnName(table, column, name);\n    }\n\n    return name;\n  }\n\n  launderViewColumnName(table, column, name) {\n    const views = this.viewColumns;\n\n    views[table.name] = views[table.name] || {};\n\n    let count = 1;\n\n    let rawName = name.substring(0, 63);\n    let newName = rawName;\n\n    while (views[table.name][newName]) {\n      newName = rawName.substring(0, 63 - (count.toString().length)) + count;\n      count++;\n    }\n\n    views[table.name][newName] = column;\n\n    return newName;\n  }\n\n  processElement(element, elementTable) {\n    switch (element.type) {\n      case 'TextField':\n        if (element.numeric) {\n          this.addDoubleElement(elementTable, element);\n        } else {\n          this.addStringElement(elementTable, element);\n        }\n        break;\n\n      case 'ChoiceField':\n        if (element.multiple) {\n          this.addArrayElement(elementTable, element);\n        } else {\n          this.addStringElement(elementTable, element);\n        }\n        break;\n\n      case 'ClassificationField':\n        this.addArrayElement(elementTable, element);\n        break;\n\n      case 'YesNoField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'PhotoField':\n      case 'VideoField':\n      case 'AudioField':\n        this.addMediaElement(elementTable, element);\n        break;\n\n      case 'SignatureField':\n        this.addStringElement(elementTable, element);\n        this.addDateElement(elementTable, element, 'timestamp');\n        break;\n\n      case 'BarcodeField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'DateTimeField':\n      case 'DateField':\n        this.addDateElement(elementTable, element);\n        break;\n\n      case 'TimeField':\n        this.addDoubleElement(elementTable, element);\n        break;\n\n      case 'Repeatable':\n        this.addRepeatableElement(elementTable, element);\n        break;\n\n      case 'AddressField':\n        this.addStringElement(elementTable, element);\n        this.addStringElement(elementTable, element, 'sub_thoroughfare');\n        this.addStringElement(elementTable, element, 'thoroughfare');\n        this.addStringElement(elementTable, element, 'suite');\n        this.addStringElement(elementTable, element, 'locality');\n        this.addStringElement(elementTable, element, 'admin_area');\n        this.addStringElement(elementTable, element, 'postal_code');\n        this.addStringElement(elementTable, element, 'sub_admin_area');\n        this.addStringElement(elementTable, element, 'country');\n        break;\n\n      case 'HyperlinkField':\n        this.addStringElement(elementTable, element);\n        break;\n\n      case 'RecordLinkField':\n        this.addArrayElement(elementTable, element);\n        break;\n\n      case 'CalculatedField':\n        switch (element.display.style) {\n          case 'number':\n          case 'date':\n          case 'currency':\n            this.addDoubleElement(elementTable, element);\n            break;\n          default:\n            this.addStringElement(elementTable, element);\n            break;\n        }\n        break;\n\n      default:\n        console.log('Unhandled element type', element.type);\n        break;\n    }\n  }\n\n  addStringElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'string', suffix);\n  }\n\n  addDateElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'date', suffix);\n  }\n\n  addDoubleElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'double', suffix);\n  }\n\n  addIntegerElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'integer', suffix);\n  }\n\n  addArrayElement(table, element, suffix) {\n    if (suffix == null) {\n      suffix = '';\n    }\n    return this.addElement(table, element, 'array', suffix);\n  }\n\n  addElement(table, element, type, suffix) {\n    let column = null;\n\n    if (suffix == null) {\n      suffix = '';\n    }\n\n    if (suffix) {\n      suffix = '_' + suffix;\n    }\n\n    column = {\n      id: this.prefix + element.key + suffix,\n      type: type,\n      element: element,\n      suffix: suffix\n    };\n\n    table.addColumn(column);\n  }\n\n  addMediaElement(table, element) {\n    this.addArrayElement(table, element);\n\n    if (this.columns.includeMediaCaptions !== false) {\n      return this.addArrayElement(table, element, 'captions');\n    }\n  }\n\n  addRepeatableElement(parentTable, element) {\n    const childTable = this.buildRepeatableTable(parentTable, element);\n\n    this.tables.push(childTable);\n\n    const elements = Utils.flattenElements(element.elements, false);\n\n    const childElements = DataElements.find(elements);\n\n    for (const childElement of childElements) {\n      this.processElement(childElement, childTable);\n    }\n  }\n}\n"]}