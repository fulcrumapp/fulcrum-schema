{"version":3,"sources":["../src/organization-schema.js"],"names":[],"mappings":"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","file":"organization-schema.js","sourcesContent":["import _ from 'underscore';\nimport sqldiff from 'sqldiff';\n\nconst {Table, View} = sqldiff;\n\nexport default class OrganizationSchema {\n  constructor(schema, options) {\n    this.schema = schema;\n    this.options = options || {};\n    this.buildSchema();\n  }\n\n  buildSchema() {\n    this.tables = [];\n    this.views = [];\n\n    this.buildTable('changesets', this.schema.systemChangesetsTable);\n    this.buildTable('forms', this.schema.systemFormsTable);\n    this.buildTable('choice_lists', this.schema.systemChoiceListsTable);\n    this.buildTable('classification_sets', this.schema.systemClassificationSetsTable);\n    this.buildTable('projects', this.schema.systemProjectsTable);\n    this.buildTable('roles', this.schema.systemRolesTable);\n    this.buildTable('memberships', this.schema.systemMembershipsTable);\n    this.buildTable('photos', this.schema.systemPhotosTable);\n    this.buildTable('videos', this.schema.systemVideosTable);\n    this.buildTable('audio', this.schema.systemAudioTable);\n    this.buildTable('signatures', this.schema.systemSignaturesTable);\n\n    this.buildViews();\n  }\n\n  buildTable(name, definition) {\n    const table = new Table(name, null, {type: 'system', alias: name});\n\n    for (const column of definition) {\n      const systemColumn = _.clone(column);\n\n      systemColumn.system = true;\n\n      table.addColumn(systemColumn);\n    }\n\n    this.tables.push(table);\n  }\n\n  buildViews() {\n    for (const table of this.tables) {\n      const view = new View(table.name, null, table);\n\n      const columnNames = {};\n\n      for (const column of table.columns) {\n        let alias = this.viewColumnName(table, column);\n\n        if (alias == null) {\n          continue;\n        }\n\n        if (!columnNames[alias]) {\n          view.addColumn({column: column, alias: alias});\n          columnNames[alias] = column;\n        }\n      }\n\n      this.views.push(view);\n    }\n  }\n\n  viewColumnName(table, column) {\n    return this.schema.organizationViews[table.name][column.name];\n  }\n}\n"]}