{"version":3,"sources":["../src/organization-schema.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEO,K,qBAAA,K;IAAO,I,qBAAA,I;;IAEO,kB;AACnB,8BAAY,MAAZ,EAAoB,OAApB,EAA6B;AAAA;;AAC3B,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,OAAL,GAAe,WAAW,EAA1B;AACA,SAAK,WAAL;AACD;;;;kCAEa;AACZ,WAAK,MAAL,GAAc,EAAd;AACA,WAAK,gBAAL,GAAwB,EAAxB;AACA,WAAK,KAAL,GAAa,EAAb;;AAHY;AAAA;AAAA;;AAAA;AAKZ,6BAAoB,KAAK,MAAzB,8HAAiC;AAAA,cAAtB,KAAsB;;AAC/B,cAAM,aAAa,KAAnB;;AAEA,cAAM,aAAa,IAAI,UAAJ,EAAnB;;AAEA,qBAAW,WAAX;AACA,qBAAW,UAAX;AACA,qBAAW,aAAX;;AAEA,eAAK,gBAAL,CAAsB,WAAW,IAAjC,IAAyC,UAAzC;;AAEA,eAAK,UAAL,CAAgB,UAAhB;AACD;AAjBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBZ,WAAK,UAAL;AACD;;;+BAEU,e,EAAiB;AAC1B,UAAM,QAAQ,IAAI,KAAJ,CAAU,gBAAgB,IAA1B,EAAgC,IAAhC,EAAsC,EAAC,MAAM,QAAP,EAAiB,OAAO,gBAAgB,IAAxC,EAAtC,CAAd;;AAD0B;AAAA;AAAA;;AAAA;AAG1B,8BAAqB,gBAAgB,OAArC,mIAA8C;AAAA,cAAnC,MAAmC;;AAC5C,cAAM,eAAe,qBAAE,KAAF,CAAQ,MAAR,CAArB;;AAEA,uBAAa,MAAb,GAAsB,IAAtB;;AAEA,gBAAM,SAAN,CAAgB,YAAhB;AACD;AATyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAW1B,8BAA8B,gBAAgB,OAA9C,mIAAuD;AAAA,cAA5C,eAA4C;;AACrD,gBAAM,QAAN,CAAe,eAAf;AACD;AAbyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAe1B,WAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB;AACD;;;iCAEY;AAAA;AAAA;AAAA;;AAAA;AACX,8BAAoB,KAAK,MAAzB,mIAAiC;AAAA,cAAtB,KAAsB;;AAC/B,cAAM,OAAO,IAAI,IAAJ,CAAS,MAAM,IAAN,GAAa,OAAtB,EAA+B,IAA/B,EAAqC,KAArC,CAAb;;AAEA,cAAM,cAAc,EAApB;;AAEA,cAAM,aAAa,KAAK,gBAAL,CAAsB,MAAM,IAA5B,CAAnB;;AAL+B;AAAA;AAAA;;AAAA;AAO/B,kCAAqB,MAAM,OAA3B,mIAAoC;AAAA,kBAAzB,MAAyB;;AAClC,kBAAM,QAAQ,WAAW,WAAX,CAAuB,OAAO,IAA9B,CAAd;;AAEA,kBAAI,SAAS,IAAb,EAAmB;;AAEjB;AACD;;AAED,kBAAI,CAAC,YAAY,KAAZ,CAAL,EAAyB;AACvB,qBAAK,SAAL,CAAe,EAAC,QAAQ,MAAT,EAAiB,OAAO,KAAxB,EAAf;AACA,4BAAY,KAAZ,IAAqB,MAArB;AACD;AACF;AAnB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqB/B,cAAI,KAAK,OAAL,CAAa,MAAjB,EAAyB;AACvB,iBAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AACD;AACF;AAzBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BZ;;;;;;kBAzEkB,kB","file":"organization-schema.js","sourcesContent":["import _ from 'underscore';\nimport sqldiff from 'sqldiff';\n\nconst {Table, View} = sqldiff;\n\nexport default class OrganizationSchema {\n  constructor(schema, options) {\n    this.schema = schema;\n    this.options = options || {};\n    this.buildSchema();\n  }\n\n  buildSchema() {\n    this.tables = [];\n    this.tableDefinitions = {};\n    this.views = [];\n\n    for (const table of this.schema) {\n      const ModelClass = table;\n\n      const definition = new ModelClass();\n\n      definition.defineTable();\n      definition.defineView();\n      definition.defineIndexes();\n\n      this.tableDefinitions[definition.name] = definition;\n\n      this.buildTable(definition);\n    }\n\n    this.buildViews();\n  }\n\n  buildTable(tableDefinition) {\n    const table = new Table(tableDefinition.name, null, {type: 'system', alias: tableDefinition.name});\n\n    for (const column of tableDefinition.columns) {\n      const systemColumn = _.clone(column);\n\n      systemColumn.system = true;\n\n      table.addColumn(systemColumn);\n    }\n\n    for (const indexDefinition of tableDefinition.indexes) {\n      table.addIndex(indexDefinition);\n    }\n\n    this.tables.push(table);\n  }\n\n  buildViews() {\n    for (const table of this.tables) {\n      const view = new View(table.name + '_view', null, table);\n\n      const columnNames = {};\n\n      const definition = this.tableDefinitions[table.name];\n\n      for (const column of table.columns) {\n        const alias = definition.viewColumns[column.name];\n\n        if (alias == null) {\n          // console.log('Skipping ' + table.name + '.' + column.name + ' in view.');\n          continue;\n        }\n\n        if (!columnNames[alias]) {\n          view.addColumn({column: column, alias: alias});\n          columnNames[alias] = column;\n        }\n      }\n\n      if (view.columns.length) {\n        this.views.push(view);\n      }\n    }\n  }\n}\n"]}