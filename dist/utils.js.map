{"version":3,"sources":["../src/utils.js"],"names":["Utils","tableName","schema","prefix","quote","table","escapedSchema","escape","length","identifier","escaped","replace","RegExp","flattenElements","elements","recurseRepeatables","assignParent","parent","flat","element","push","recurse","type","children","Array","prototype","apply"],"mappings":";;;;;;;AAAe,MAAMA,KAAN,CAAY;AACT,SAATC,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;AAC7C,WAAOL,KAAK,CAACM,aAAN,CAAoBJ,MAApB,EAA4BE,KAA5B,IAAqCJ,KAAK,CAACO,MAAN,CAAa,CAACJ,MAAM,IAAI,EAAX,IAAiBE,KAA9B,EAAqCD,KAArC,CAA5C;AACD;;AAEmB,SAAbE,aAAa,CAACJ,MAAD,EAASE,KAAT,EAAgB;AAClC,QAAIF,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACM,MAAP,KAAkB,CAAxC,EAA2C;AACzC,aAAO,EAAP;AACD;;AAED,WAAOR,KAAK,CAACO,MAAN,CAAaL,MAAb,EAAqBE,KAArB,IAA8B,GAArC;AACD;;AAEY,SAANG,MAAM,CAACE,UAAD,EAAaL,KAAb,EAAoB;AAC/B,QAAIK,UAAU,IAAI,IAAd,IAAsBA,UAAU,CAACD,MAAX,KAAsB,CAAhD,EAAmD;AACjD,aAAO,EAAP;AACD;;AAEDJ,IAAAA,KAAK,GAAGA,KAAK,IAAI,GAAjB;AAEA,UAAMM,OAAO,GAAGD,UAAU,CAACE,OAAX,CAAmB,IAAIC,MAAJ,CAAWR,KAAX,EAAkB,GAAlB,CAAnB,EAA2CA,KAAK,GAAGA,KAAnD,CAAhB;AAEA,WAAOA,KAAK,GAAGM,OAAR,GAAkBN,KAAzB;AACD;;AAEqB,SAAfS,eAAe,CAACC,QAAD,EAAWC,kBAAX,EAA+BC,YAA/B,EAA6CC,MAA7C,EAAqD;AACzE,QAAIF,kBAAkB,IAAI,IAA1B,EAAgC;AAC9BA,MAAAA,kBAAkB,GAAG,IAArB;AACD;;AAED,QAAIC,YAAY,IAAI,IAApB,EAA0B;AACxBA,MAAAA,YAAY,GAAG,KAAf;AACD;;AAED,UAAME,IAAI,GAAG,EAAb;;AAEA,SAAK,MAAMC,OAAX,IAAsBL,QAAtB,EAAgC;AAC9B,UAAIE,YAAJ,EAAkB;AAChBG,QAAAA,OAAO,CAACF,MAAR,GAAiBA,MAAjB;AACD;;AAEDC,MAAAA,IAAI,CAACE,IAAL,CAAUD,OAAV;AAEA,UAAIE,OAAO,GAAG,IAAd;;AAEA,UAAI,CAACN,kBAAD,IAAuBI,OAAO,CAACG,IAAR,KAAiB,YAA5C,EAA0D;AACxDD,QAAAA,OAAO,GAAG,KAAV;AACD;;AAED,UAAIA,OAAO,IAAIF,OAAO,CAACL,QAAvB,EAAiC;AAC/B,cAAMS,QAAQ,GAAGvB,KAAK,CAACa,eAAN,CAAsBM,OAAO,CAACL,QAA9B,EAAwCC,kBAAxC,EAA4DC,YAA5D,EAA0EG,OAA1E,CAAjB;AACAK,QAAAA,KAAK,CAACC,SAAN,CAAgBL,IAAhB,CAAqBM,KAArB,CAA2BR,IAA3B,EAAiCK,QAAjC;AACD;AACF;;AAED,WAAOL,IAAP;AACD;;AAxDwB","sourcesContent":["export default class Utils {\n  static tableName(schema, prefix, quote, table) {\n    return Utils.escapedSchema(schema, quote) + Utils.escape((prefix || '') + table, quote);\n  }\n\n  static escapedSchema(schema, quote) {\n    if (schema == null || schema.length === 0) {\n      return '';\n    }\n\n    return Utils.escape(schema, quote) + '.';\n  }\n\n  static escape(identifier, quote) {\n    if (identifier == null || identifier.length === 0) {\n      return '';\n    }\n\n    quote = quote || '\"';\n\n    const escaped = identifier.replace(new RegExp(quote, 'g'), quote + quote);\n\n    return quote + escaped + quote;\n  }\n\n  static flattenElements(elements, recurseRepeatables, assignParent, parent) {\n    if (recurseRepeatables == null) {\n      recurseRepeatables = true;\n    }\n\n    if (assignParent == null) {\n      assignParent = false;\n    }\n\n    const flat = [];\n\n    for (const element of elements) {\n      if (assignParent) {\n        element.parent = parent;\n      }\n\n      flat.push(element);\n\n      let recurse = true;\n\n      if (!recurseRepeatables && element.type === 'Repeatable') {\n        recurse = false;\n      }\n\n      if (recurse && element.elements) {\n        const children = Utils.flattenElements(element.elements, recurseRepeatables, assignParent, element);\n        Array.prototype.push.apply(flat, children);\n      }\n    }\n\n    return flat;\n  }\n}\n"],"file":"utils.js"}