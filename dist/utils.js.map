{"version":3,"file":"utils.js","names":["Utils","tableName","schema","prefix","quote","table","escapedSchema","escape","escapeIdentifier","identifier","length","needsQuotes","test","replace","escaped","RegExp","flattenElements","elements","recurseRepeatables","assignParent","parent","flat","element","push","recurse","type","children","Array","prototype","apply"],"sources":["../src/utils.js"],"sourcesContent":["export default class Utils {\n  static tableName(schema, prefix, quote, table) {\n    return Utils.escapedSchema(schema, quote) + Utils.escape((prefix || '') + table, quote);\n  }\n\n  static escapeIdentifier(identifier) {\n    if (identifier == null || identifier.length === 0) {\n      return '';\n    }\n\n    const needsQuotes = /[^_A-Z0-9]/i.test(identifier) ||\n                        /^[0-9]/.test(identifier);\n\n    if (needsQuotes) {\n      return '\"' + (identifier.replace(/\"/g, '\"\"')) + '\"';\n    }\n\n    return identifier;\n  }\n\n  static escapedSchema(schema, quote) {\n    if (schema == null || schema.length === 0) {\n      return '';\n    }\n\n    return Utils.escape(schema, quote) + '.';\n  }\n\n  static escape(identifier, quote) {\n    if (identifier == null || identifier.length === 0) {\n      return '';\n    }\n\n    quote = quote || '\"';\n\n    const escaped = identifier.replace(new RegExp(quote, 'g'), quote + quote);\n\n    return quote + escaped + quote;\n  }\n\n  static flattenElements(elements, recurseRepeatables, assignParent, parent) {\n    if (recurseRepeatables == null) {\n      recurseRepeatables = true;\n    }\n\n    if (assignParent == null) {\n      assignParent = false;\n    }\n\n    const flat = [];\n\n    for (const element of elements) {\n      if (assignParent) {\n        element.parent = parent;\n      }\n\n      flat.push(element);\n\n      let recurse = true;\n\n      if (!recurseRepeatables && element.type === 'Repeatable') {\n        recurse = false;\n      }\n\n      if (recurse && element.elements) {\n        const children = Utils.flattenElements(element.elements, recurseRepeatables, assignParent, element);\n        Array.prototype.push.apply(flat, children);\n      }\n    }\n\n    return flat;\n  }\n}\n"],"mappings":";;;;;;;;;IAAqBA,KAAK;EAAA;EAAA,MACjBC,SAAS,GAAhB,mBAAiBC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC7C,OAAOL,KAAK,CAACM,aAAa,CAACJ,MAAM,EAAEE,KAAK,CAAC,GAAGJ,KAAK,CAACO,MAAM,CAAC,CAACJ,MAAM,IAAI,EAAE,IAAIE,KAAK,EAAED,KAAK,CAAC;EACzF,CAAC;EAAA,MAEMI,gBAAgB,GAAvB,0BAAwBC,UAAU,EAAE;IAClC,IAAIA,UAAU,IAAI,IAAI,IAAIA,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;MACjD,OAAO,EAAE;IACX;IAEA,IAAMC,WAAW,GAAG,aAAa,CAACC,IAAI,CAACH,UAAU,CAAC,IAC9B,QAAQ,CAACG,IAAI,CAACH,UAAU,CAAC;IAE7C,IAAIE,WAAW,EAAE;MACf,OAAO,GAAG,GAAIF,UAAU,CAACI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAE,GAAG,GAAG;IACrD;IAEA,OAAOJ,UAAU;EACnB,CAAC;EAAA,MAEMH,aAAa,GAApB,uBAAqBJ,MAAM,EAAEE,KAAK,EAAE;IAClC,IAAIF,MAAM,IAAI,IAAI,IAAIA,MAAM,CAACQ,MAAM,KAAK,CAAC,EAAE;MACzC,OAAO,EAAE;IACX;IAEA,OAAOV,KAAK,CAACO,MAAM,CAACL,MAAM,EAAEE,KAAK,CAAC,GAAG,GAAG;EAC1C,CAAC;EAAA,MAEMG,MAAM,GAAb,gBAAcE,UAAU,EAAEL,KAAK,EAAE;IAC/B,IAAIK,UAAU,IAAI,IAAI,IAAIA,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;MACjD,OAAO,EAAE;IACX;IAEAN,KAAK,GAAGA,KAAK,IAAI,GAAG;IAEpB,IAAMU,OAAO,GAAGL,UAAU,CAACI,OAAO,CAAC,IAAIE,MAAM,CAACX,KAAK,EAAE,GAAG,CAAC,EAAEA,KAAK,GAAGA,KAAK,CAAC;IAEzE,OAAOA,KAAK,GAAGU,OAAO,GAAGV,KAAK;EAChC,CAAC;EAAA,MAEMY,eAAe,GAAtB,yBAAuBC,QAAQ,EAAEC,kBAAkB,EAAEC,YAAY,EAAEC,MAAM,EAAE;IACzE,IAAIF,kBAAkB,IAAI,IAAI,EAAE;MAC9BA,kBAAkB,GAAG,IAAI;IAC3B;IAEA,IAAIC,YAAY,IAAI,IAAI,EAAE;MACxBA,YAAY,GAAG,KAAK;IACtB;IAEA,IAAME,IAAI,GAAG,EAAE;IAEf,qDAAsBJ,QAAQ,wCAAE;MAAA,IAArBK,OAAO;MAChB,IAAIH,YAAY,EAAE;QAChBG,OAAO,CAACF,MAAM,GAAGA,MAAM;MACzB;MAEAC,IAAI,CAACE,IAAI,CAACD,OAAO,CAAC;MAElB,IAAIE,OAAO,GAAG,IAAI;MAElB,IAAI,CAACN,kBAAkB,IAAII,OAAO,CAACG,IAAI,KAAK,YAAY,EAAE;QACxDD,OAAO,GAAG,KAAK;MACjB;MAEA,IAAIA,OAAO,IAAIF,OAAO,CAACL,QAAQ,EAAE;QAC/B,IAAMS,QAAQ,GAAG1B,KAAK,CAACgB,eAAe,CAACM,OAAO,CAACL,QAAQ,EAAEC,kBAAkB,EAAEC,YAAY,EAAEG,OAAO,CAAC;QACnGK,KAAK,CAACC,SAAS,CAACL,IAAI,CAACM,KAAK,CAACR,IAAI,EAAEK,QAAQ,CAAC;MAC5C;IACF;IAEA,OAAOL,IAAI;EACb,CAAC;EAAA;AAAA;AAAA"}