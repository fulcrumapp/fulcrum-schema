{"version":3,"sources":["../src/table-definition.js"],"names":["TableDefinition","constructor","columns","viewColumns","indexes","column","name","type","options","push","pk","integer","string","timestamp","boolean","double","text","array","fts","geometry","json","alias","source","to","index","define"],"mappings":";;;;;;;AAAe,MAAMA,eAAN,CAAsB;AACnCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,OAAL,GAAe,EAAf;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb,EAAsB;AAC1B,SAAKN,OAAL,CAAaO,IAAb,CAAkB;AAACH,MAAAA,IAAI,EAAEA,IAAP;AAAaC,MAAAA,IAAI,EAAEA,IAAnB;AAAyB,SAAGC;AAA5B,KAAlB;AACD;;AAEDE,EAAAA,EAAE,GAAG;AACH,SAAKL,MAAL,CAAY,IAAZ,EAAkB,IAAlB;AACD;;AAEDM,EAAAA,OAAO,CAACL,IAAD,EAAOE,OAAP,EAAgB;AACrB,SAAKH,MAAL,CAAYC,IAAZ,EAAkB,SAAlB,EAA6BE,OAA7B;AACD;;AAEDI,EAAAA,MAAM,CAACN,IAAD,EAAOE,OAAP,EAAgB;AACpB,SAAKH,MAAL,CAAYC,IAAZ,EAAkB,QAAlB,EAA4BE,OAA5B;AACD;;AAEDK,EAAAA,SAAS,CAACP,IAAD,EAAOE,OAAP,EAAgB;AACvB,SAAKH,MAAL,CAAYC,IAAZ,EAAkB,WAAlB,EAA+BE,OAA/B;AACD;;AAEDM,EAAAA,OAAO,CAACR,IAAD,EAAOE,OAAP,EAAgB;AACrB,SAAKH,MAAL,CAAYC,IAAZ,EAAkB,SAAlB,EAA6BE,OAA7B;AACD;;AAEDO,EAAAA,MAAM,CAACT,IAAD,EAAOE,OAAP,EAAgB;AACpB,SAAKH,MAAL,CAAYC,IAAZ,EAAkB,QAAlB,EAA4BE,OAA5B;AACD;;AAEDQ,EAAAA,IAAI,CAACV,IAAD,EAAOE,OAAP,EAAgB;AAClB,SAAKH,MAAL,CAAYC,IAAZ,EAAkB,MAAlB,EAA0BE,OAA1B;AACD;;AAEDS,EAAAA,KAAK,CAACX,IAAD,EAAOE,OAAP,EAAgB;AACnB,SAAKH,MAAL,CAAYC,IAAZ,EAAkB,OAAlB,EAA2BE,OAA3B;AACD;;AAEDU,EAAAA,GAAG,CAACZ,IAAD,EAAOE,OAAP,EAAgB;AACjB,SAAKH,MAAL,CAAYC,IAAZ,EAAkB,KAAlB,EAAyBE,OAAzB;AACD;;AAEDW,EAAAA,QAAQ,CAACb,IAAD,EAAOE,OAAP,EAAgB;AACtB,SAAKH,MAAL,CAAYC,IAAZ,EAAkB,UAAlB,EAA8BE,OAA9B;AACD;;AAEDY,EAAAA,IAAI,CAACd,IAAD,EAAOE,OAAP,EAAgB;AAClB,SAAKH,MAAL,CAAYC,IAAZ,EAAkB,MAAlB,EAA0BE,OAA1B;AACD;;AAEDa,EAAAA,KAAK,CAACC,MAAD,EAASC,EAAT,EAAa;AAChB,SAAKpB,WAAL,CAAiBmB,MAAjB,IAA2BC,EAA3B;AACD;;AAEDC,EAAAA,KAAK,CAAChB,OAAD,EAAU;AACb,SAAKJ,OAAL,CAAaK,IAAb,CAAkBD,OAAlB;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AAjEkC","sourcesContent":["export default class TableDefinition {\n  constructor() {\n    this.columns = [];\n    this.viewColumns = {};\n    this.indexes = [];\n  }\n\n  column(name, type, options) {\n    this.columns.push({name: name, type: type, ...options});\n  }\n\n  pk() {\n    this.column('id', 'pk');\n  }\n\n  integer(name, options) {\n    this.column(name, 'integer', options);\n  }\n\n  string(name, options) {\n    this.column(name, 'string', options);\n  }\n\n  timestamp(name, options) {\n    this.column(name, 'timestamp', options);\n  }\n\n  boolean(name, options) {\n    this.column(name, 'boolean', options);\n  }\n\n  double(name, options) {\n    this.column(name, 'double', options);\n  }\n\n  text(name, options) {\n    this.column(name, 'text', options);\n  }\n\n  array(name, options) {\n    this.column(name, 'array', options);\n  }\n\n  fts(name, options) {\n    this.column(name, 'fts', options);\n  }\n\n  geometry(name, options) {\n    this.column(name, 'geometry', options);\n  }\n\n  json(name, options) {\n    this.column(name, 'json', options);\n  }\n\n  alias(source, to) {\n    this.viewColumns[source] = to;\n  }\n\n  index(options) {\n    this.indexes.push(options);\n  }\n\n  define() {\n    return null;\n  }\n}\n"],"file":"table-definition.js"}